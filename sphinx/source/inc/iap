.. Automatically generated file - do not modify.

.. function:: iap.get_store_name()
    
    Returns the name of the enabled store for in-app purchase. This
    currently returns one of "amazon", "google", or None if no store
    is configured.

.. function:: iap.has_purchased(product)
    
    Returns True if the user has purchased `product` in the past, and
    False otherwise.

.. function:: iap.purchase(product, interact=True)
    
    This function requests the purchase of `product`.
    
    It returns true if the purchase succeded, now or at any time in the past,
    and false otherwise.

.. function:: iap.register(product, identifier=None, amazon=None, google=None)
    
    Registers a product with the in-app purchase system.
    
    `product`
        A string giving the high-level name of the product. This is the
        string that will be passed to :func:`iap.purchase`, :func:`iap.Purchase`,
        and :func:`iap.has_purchased` to represent this product.
    
    `identifier`
        A string that's used to identify the product internally. Once used
        to represent a product, this must never change. These strings are
        generall of the form "com.domain.game.product".
    
        If None, defaults to `product`.
    
    `amazon`
        A string that identifies the product in the Amazon app store.
        If not given, defaults to `identifier`.
    
    `google`
        A string that identifies the product in the Google Play store.
        If not given, defaults to `identifier`.

.. function:: iap.restore(interact=True)
    
    Contacts the app store and restores any missing purchases.
    
    `interact`
        If True, renpy.pause will be called while waiting for the app store
        to respond.

