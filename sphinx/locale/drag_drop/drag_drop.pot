# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.15.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-25 09:05\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/drag_drop.rst:7
# 440bb316abd64ec9996eafcb6b3083fe
msgid "Drag and Drop"
msgstr ""

#: ../../source/drag_drop.rst:9
# 05d9a615086642828158b583dc12eefa
msgid "Ren'Py includes drag and drop displayables that allow things to be moved around the screen with the mouse. Some of the uses of dragging are:"
msgstr ""

#: ../../source/drag_drop.rst:13
# d6e8c58818f84413bcb4e1052a5b88af
msgid "Allowing windows to be repositioned by the user, storing the window positions."
msgstr ""

#: ../../source/drag_drop.rst:15
# bc5db0e3936140f29d446b18ff06b518
msgid "Card games that require cards to be dragged around the screen. (For example, solitaire.)"
msgstr ""

#: ../../source/drag_drop.rst:17
# 6c5577e835094622949f68f3db60b6da
msgid "Inventory systems."
msgstr ""

#: ../../source/drag_drop.rst:18
# 90fee87475d34d5599b45d3895198b57
msgid "Drag-to-reorder systems."
msgstr ""

#: ../../source/drag_drop.rst:20
# c2d0d4038e4e4025891982ce38d090a7
msgid "The drag and drop displayables make it possible to implement these and other uses of drag and drop. There are two classes involved here. The Drag class represents either something that can be dragged around the screen, something that can have a draggable dropped onto it, or something that can do both. The DragGroup class represents a group of Drags - for a drag and drop to occur, both Drags must be part of the same drag group."
msgstr ""

#: ../../source/drag_drop.rst:28
# e120473cc6f64c5bbc38dde38e595bbf
msgid "The drag and drop system can be used either through the :ref:`Screen Language <screens>` or directly as displayables. It makes sense to use the screen language when you don't need to refer to the Drags that you create after they've been created. This might be the case if the draggable represents a window that the user places on the scren. If you need to refer to the drags after they've been created, then it's often better to create Drags directly, and add them to a DragGroup."
msgstr ""

#: ../../source/drag_drop.rst:37
# a8a8b8796fb349489b31666010a0d640
msgid "Displayables"
msgstr ""

#: ../../source/inc/drag_drop:5
# 5198690b9aa24e04b1ccdc7a24147a4f
msgid "A displayable that represents an object that can be dragged around its enclosing area. A Drag can also represent an area that other Drags can be dropped on."
msgstr ""

#: ../../source/inc/drag_drop:9
# e7ed2435ef774233902feff582dc99fd
msgid "A Drag can be moved around inside is parent. Generally, its parent should be either a :func:`Fixed` or :class:`DragGroup`."
msgstr ""

#: ../../source/inc/drag_drop:12
# f85c2350349940afae8571b1a2a644b3
msgid "A Drag has one child. The child's state reflects the status of the drag and drop operation:"
msgstr ""

#: ../../source/inc/drag_drop:15
# 7597f39c537846628e720b68de795851
msgid "``selected_hover`` - when it is being dragged."
msgstr ""

#: ../../source/inc/drag_drop:16
# 4b1824bb8bb84f74a9c04190abe2e9e1
msgid "``selected_idle`` - when it can be dropped on."
msgstr ""

#: ../../source/inc/drag_drop:17
# 794849f30428497cadbbd0d6a172212a
msgid "``hover`` - when the draggable will be dragged when the mouse is clicked."
msgstr ""

#: ../../source/inc/drag_drop:19
# 58545ac5fa674ef8b7018ecad862e4a2
msgid "``idle`` - otherwise."
msgstr ""

#: ../../source/inc/drag_drop:21
# cfaf9e05c4744523b3f66f1995720db4
msgid "The drag handle is a rectangle inside the child. The mouse must be over a non-transparent pixel inside the drag handle for dragging or clicking to occur."
msgstr ""

#: ../../source/inc/drag_drop:25
# 0ff4076513f54b43b7506d65fc4aea67
msgid "A newly-created draggable is added to the default DragGroup. A draggable can only be in a single DragGroup - if it's added to a second group, it's removed from the first."
msgstr ""

#: ../../source/inc/drag_drop:29
# 8f10bebc97a24e9e89a0d399625d4d2a
msgid "When a Drag is first rendered, if it's position cannot be determined from the DragGroup it is in, the position of its upper-left corner is computed using the standard layout algorithm. Once that position"
msgstr ""

#: ../../source/inc/drag_drop:36
# 2685efeb5a5c4c77b3bd4a8d5ca9aed8
msgid "`d`"
msgstr ""

#: ../../source/inc/drag_drop:35
# 415481bf27e5402988eccd61962d54e7
msgid "If present, the child of this Drag. Drags use the child style in preference to this, if it's not None."
msgstr ""

#: ../../source/inc/drag_drop:42
# a80d17c4a7c34b8585a61303d1045762
msgid "`drag_name`"
msgstr ""

#: ../../source/inc/drag_drop:39
# a736be9c312b436f9de0a026049685ca
msgid "If not None, the name of this draggable. This is available as the `name` property of draggable objects. If a Drag with the same name is or was in the DragGroup, the starting position of this Drag is taken from that Draggable."
msgstr ""

#: ../../source/inc/drag_drop:46
# 819632fd34064d0c9bf03a6045de9455
msgid "`draggable`"
msgstr ""

#: ../../source/inc/drag_drop:45
# 393b5d81c05f4026b1bca3f2691006a2
msgid "If true, the Drag can be dragged around the screen with the mouse."
msgstr ""

#: ../../source/inc/drag_drop:49
# 67785cb756e04635aefb460961214039
msgid "`droppable`"
msgstr ""

#: ../../source/inc/drag_drop:49
# 38b7ecb6728f4903a89cda4599e1fe87
msgid "If true, other Drags can be dropped on this Drag."
msgstr ""

#: ../../source/inc/drag_drop:53
# 8a3dd6c5de544f02b6d13ecab1dbcb15
msgid "`drag_raise`"
msgstr ""

#: ../../source/inc/drag_drop:52
# 6f7bdbd0318740bd80d8d88f49426860
msgid "If true, this Drag is raised to the top when it is dragged. If it is joined to other Drags, all joined drags are raised."
msgstr ""

#: ../../source/inc/drag_drop:61
# 5fa4ae0481234dcb98cfd024381648d8
msgid "`dragged`"
msgstr ""

#: ../../source/inc/drag_drop:56
# 3ffe058bd8cc4d49a0d5a9384c5fca6d
msgid "A callback (or list of callbacks) that is called when the Drag has been dragged. It is called with two arguments. The first is a list of Drags that are being dragged. The second is either a Drag that is being dropped onto, or None of a drop did not occur. If the callback returns a value other than None, that value is returned as the result of the interaction."
msgstr ""

#: ../../source/inc/drag_drop:72
# 57380abbd353440fbd57506171e616a0
msgid "`dropped`"
msgstr ""

#: ../../source/inc/drag_drop:64
# 5906ce5df6f64060a5e90170cdcfe0bc
msgid "A callback (or list of callbacks) that is called when this Drag is dropped onto. It is called with two arguments. The first is the Drag being dropped onto. The second is a list of Drags that are being dragged.  If the callback returns a value other than None, that value is returned as the result of the interaction."
msgstr ""

#: ../../source/inc/drag_drop:70
# 934654755717427eb40e6b9fab04356d
msgid "When a dragged and dropped callback are triggered for the same event, the dropped callback is only called if dragged returns None."
msgstr ""

#: ../../source/inc/drag_drop:78
# afe734e9dc9746e8b972bbc2ae1898f1
msgid "`clicked`"
msgstr ""

#: ../../source/inc/drag_drop:75
# 191d024568bd47e6930802d5c47fdba5
msgid "A callback this is called, with no arguments, when the Drag is clicked without being moved. A droppable can also be focused and clicked.  If the callback returns a value othe than None, that value is returned as the result of the interaction."
msgstr ""

#: ../../source/inc/drag_drop:84
# c85f7acb3bcd4235ba3c2516954dbfa4
msgid "`drag_handle`"
msgstr ""

#: ../../source/inc/drag_drop:81
# 2dabb3ecf0a4450985ae70b61ea4bde6
msgid "A (x, y, width, height) tuple, giving the position of the drag handle within the child. In this tuple, integers are considered to be a literal number of pixels, while floats are relative to the size of the child."
msgstr ""

#: ../../source/inc/drag_drop:91
# 42ffda553ad94d00a97a683b68c478b1
msgid "`drag_joined`"
msgstr ""

#: ../../source/inc/drag_drop:87
# 7506ad5f9cfc4266a2fc8f36b6f6a37c
msgid "This is called with the current Drag as an argument. It's expected to return a list of [ (drag, x, y) ] tuples, giving the draggables to drag as a unit. `x` and `y` are the offsets of the drags relative to each other, they are not relative to the corner of this drag."
msgstr ""

#: ../../source/inc/drag_drop:93
# 103709fb9b544b02aacd949995a2aec9
msgid "Except for `d`, all of the parameters are available as fields (with the same name) on the Drag object. In addition, after the drag has been rendered, the following fields become available:"
msgstr ""

#: ../../source/inc/drag_drop:98
# 4f1d2d77077b47a0bb32df96533ce743
msgid "`x`, `y`"
msgstr ""

#: ../../source/inc/drag_drop:98
# b511b017ef204e60b0b60ff1d0a26258
msgid "The position of the Drag relative to its parent, in pixels."
msgstr ""

#: ../../source/inc/drag_drop:102
# d35c828aaa7641be9ead0e01c9e5351c
msgid "`w`, `h`"
msgstr ""

#: ../../source/inc/drag_drop:101
# bd75c5167a054231b550be9f9360973e
msgid "The width and height of the Drag's child, in pixels."
msgstr ""

#: ../../source/inc/drag_drop:106
# 3b9e6726ac0240e8a452fea1e0135870
msgid "Changes the child of this drag to `d`."
msgstr ""

#: ../../source/inc/drag_drop:110
# b34ab033139c414199fee6250f7fa7df
msgid "Changes the position of the drag. If the drag is not showing, then the position change is instantaneous. Otherwise, the position change takes `delay` seconds, and is animated as a linear move."
msgstr ""

#: ../../source/inc/drag_drop:117
# 26742634694747c9b23bf7ae3888430f
msgid "Raises this displayable to the top of its drag_group."
msgstr ""

#: ../../source/inc/drag_drop:121
# ba4083e835f443d0a71028fb06ea45ce
msgid "Represents a group of Drags. A Drag is limited to the boundary of its DragGroup. Dropping only works between Drags that are in the same DragGroup. Drags may only be raised when they are inside a DragGroup."
msgstr ""

#: ../../source/inc/drag_drop:126
# d116e241aedf44cc9c73183f6eed0373
msgid "A DragGroup is laid out like a :func:`Fixed`."
msgstr ""

#: ../../source/inc/drag_drop:128
# 14f28ec2238542bbab52a42878f1e6a7
msgid "All positional parameters to the DragGroup constructor should be Drags, that are added to the DragGroup."
msgstr ""

#: ../../source/inc/drag_drop:133
# 4d8e5b0731344c13a9c739862f50d411
msgid "Adds `child`, which must be a Drag, to this DragGroup."
msgstr ""

#: ../../source/inc/drag_drop:137
# 86b75a7d752245fcb15e942dd778f023
msgid "Returns the first child of this DragGroup that has a drag_name of name."
msgstr ""

#: ../../source/inc/drag_drop:142
# 3e0cb9338eb345d394e7ea52abf34178
msgid "Removes `child` from this DragGroup."
msgstr ""

#: ../../source/drag_drop.rst:42
# 16751c7181df404b84333cb1f7392cb1
msgid "Examples"
msgstr ""

#: ../../source/drag_drop.rst:44
# 05ab7468888641db8871d983cb57808d
msgid "An example of a say screen that allows the user to choose the location of the window by dragging it around the screen.::"
msgstr ""

#: ../../source/drag_drop.rst:67
# d37651de48c342ce9520be4a612914bc
msgid "Here's a more complicated example, one that shows how dragging can be used to influence gameplay. It shows how dragging can be used to send a character to a location::"
msgstr ""

#: ../../source/drag_drop.rst:125
# ca10b3ea0766465b8dcc710323f95d77
msgid "More complicated systems take significant programming skill to get right. The `Ren'Py cardgame framework <http://www.renpy.org/wiki/renpy/Frameworks#Cardgame>`_ is both an example of how to use drag and drop in a complex system, and useful for making card games in its own right."
msgstr ""

