# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.15.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 22:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/text.rst:8
# 7cde566b225249a1983db7d3fac577d5
msgid "Text"
msgstr ""

#: ../../source/text.rst:10
# ef846912b4bd4215a53e645c97e11a46
msgid "Ren'Py contains several ways of displaying text. The :ref:`say <say-statement>` and :ref:`menu <menu-statement>` are primarily concerned with the display of text to the user. The user interface often contains text, displayed using the :ref:`text <sl-text>`, :ref:`textbutton <sl-textbutton>`, and :ref:`label <sl-label>` screen language statements. These functions, along with others, create :func:`Text` displayables, and show them on the screen."
msgstr ""

#: ../../source/text.rst:18
# d0aa7fb380e74453b0f8acc1dcf84236
msgid "The Text displayable is responsible for managing the process of showing the text to the user. The text displayable performs actions in the following order:"
msgstr ""

#: ../../source/text.rst:23
# 75a1e4744c1a48aa85aaf652824eb54f
msgid "Translating text."
msgstr ""

#: ../../source/text.rst:24
# f187502c753d4b8289074b72ead011a1
msgid "Interpolating data into the text."
msgstr ""

#: ../../source/text.rst:25
# 2ab0874bcf304f25870ed278d2095ded
msgid "Styling the text using styles and text tags."
msgstr ""

#: ../../source/text.rst:26
# f2a79057cb894889883fedd6112426ba
msgid "Laying out the styled text."
msgstr ""

#: ../../source/text.rst:27
# 8102a2b5932c4bc3b91841b679c3017f
msgid "Drawing the text to the screen."
msgstr ""

#: ../../source/text.rst:29
# f3d415b322e2485d812330df1881ccc8
msgid "This chapter discusses the process of text display in Ren'Py."
msgstr ""

#: ../../source/text.rst:33
# c086f9c11d60449ba040980919511e1c
msgid "Escape Characters"
msgstr ""

#: ../../source/text.rst:35
# 8117e7adf0d04bbc96b1003a92e03100
msgid "There are three special characters that can control the way Ren'Py displays text. A creator needs to be aware of these characters to ensure that their writing is not accidentally misinterpreted by the engine."
msgstr ""

#: ../../source/text.rst:58
# b30c945118264d45a624dee5a82ffeb1
msgid "\\ (backslash)"
msgstr ""

#: ../../source/text.rst:40
# 1210d02c9bff4c619292dede3cc5e2ec
msgid "The backslash character is used to introduce when writing a Ren'Py or Python string. Some common escape codes are:"
msgstr ""

#: ../../source/text.rst:44
# 497f7b24016f415e91e16061b963f73a
msgid "\\\\\" (backslash-doublequote)"
msgstr ""

#: ../../source/text.rst:44
# 54818293cd6f4258a11f8d69a53f762b
msgid "Includes a doublequote in a double-quoted string."
msgstr ""

#: ../../source/text.rst:47
# a1b0d7252f5d4935806c372a3764a732
msgid "\\\\' (backslash-quote)"
msgstr ""

#: ../../source/text.rst:47
# cee500c6600d48599b164460318122ed
msgid "Includes a single quote in a single-quoted string."
msgstr ""

#: ../../source/text.rst:52
# d627601423064910ab77c853a31fdb91
msgid "\\\\\\  (backslash-space)"
msgstr ""

#: ../../source/text.rst:50
# 3cce82480dc2405b89e332bac80fd548
msgid "Includes an additional space in a Ren'Py string. By default, Ren'Py script text collapses adjacent whitespace into a single space character."
msgstr ""

#: ../../source/text.rst:55
# 1249732bebe342589489909a42f37e41
msgid "\\\\n (backslash-n)"
msgstr ""

#: ../../source/text.rst:55
# bb5fb0ef2f264ae3a1b34987e8054de8
msgid "Includes a newline character in the text."
msgstr ""

#: ../../source/text.rst:58
# 86bda7ff187d419ba3e2c7b6b16c5e77
msgid "\\\\\\\\ (backslash-backslash)"
msgstr ""

#: ../../source/text.rst:58
# e7eccf164c0a4cde8d02f72cd3dd71ae
msgid "Includes a backslash character in the text."
msgstr ""

#: ../../source/text.rst:63
# c47bd7d33feb44f7b3204e8385528bb4
msgid "[ (left bracket)"
msgstr ""

#: ../../source/text.rst:61
# 3430d641fd5340e0bf1fa551e252f19b
msgid "The left bracket is used to introduce interpolation of a value into the text. To include a single left bracket in your text, double it - write ``[[``."
msgstr ""

#: ../../source/text.rst:68
# 894e002295cd41c79b4ca049476eab7d
msgid "{ (left brace)"
msgstr ""

#: ../../source/text.rst:66
# 098c6ab26afa441d9901caee11b64dca
msgid "The left brace is used to introduce a text tag. To include a left brace in your text, double it - write ``{{``."
msgstr ""

#: ../../source/text.rst:71
# 27f0d5a7429c4c33a56dcf3008b67019
msgid "Interpolating Data"
msgstr ""

#: ../../source/text.rst:73
# 0e35f7b55ac640bebb472e7cfd089be8
msgid "Ren'Py supports interpolating data into the text string before it is displayed. For example, if the player's name is stored in the ``playername`` variable, one could write a line of dialogue like::"
msgstr ""

#: ../../source/text.rst:79
# 4ffa64abfb5a43ad86778a07672d298c
msgid "Ren'Py will interpolate variables found in the global store. When using a text widget in a screen, Ren'Py will also interpolate screen local variables. (This can be overridden by supplying an explicit scope argument to the Text displayable.)"
msgstr ""

#: ../../source/text.rst:84
# e03b9c21b4ad489a8d7c85a3a63cff77
msgid "Ren'Py isn't limited to interpolating simple variables. It can also interpolate fields and components of tuples. So it's possible to have code like::"
msgstr ""

#: ../../source/text.rst:90
# a28c3934347d42499c3c79a0f6220159
msgid "It's possible to apply formatting codes when displaying numbers. This code will display a floating point number to two decimal places::"
msgstr ""

#: ../../source/text.rst:96
# 8ab3ae2415e34a748bceafb00cf58443
msgid "Ren'Py's string interpolation is taken from the :pep:`3101` string formatting syntax. Ren'Py uses [ to introduce string formatting because { was taken by text tags."
msgstr ""

#: ../../source/text.rst:100
# 12498d0f343d423a94f33ed79d577c76
msgid "Along with the !s and !r conversion flags supported by Python, Ren'Py supports !q and !t conversion flag. The !q conversion flag ensures that text tags are properly quoted, so that displaying a string will not introduce unwanted formatting constructs. For example::"
msgstr ""

#: ../../source/text.rst:107
# f6162617d1574570b1f33a8dd2bc25a2
msgid "The !t flag will translate the interpolated string::"
msgstr ""

#: ../../source/text.rst:118
# 23bf4a5c17274eaca063fcf3fe60955f
msgid "Styling and Text Tags"
msgstr ""

#: ../../source/text.rst:120
# 7859e84d8a0b4ad495807e46796eafdc
msgid "In Ren'Py, text gains style information in two ways. The first is from the style that is applied to the entire block of text. Please see the section about the :ref:`style system <styles>` for more details, especially the section on :ref:`text style properties <text-style-properties>`."
msgstr ""

#: ../../source/text.rst:125
# 9f06287893c341728bd8b73de8a90b80
msgid "The second way is through text tags. Text tags are suitable for styling a portion of text block, or a small fraction of the text blocks in the program. If you find yourself applying the same text tags to every line of text, consider using a style instead."
msgstr ""

#: ../../source/text.rst:130
# fbba9000c1c149d78f51248bb72f0b85
msgid "There are two text tags. Some text tags are self-closing, while others require a closing tag. When multiple closing tags are used, they should be closed last open, first closed order - Ren'Py will reject incorrect nesting. For example::"
msgstr ""

#: ../../source/text.rst:142
# aebcda2713374b0e8210e2cf767d96f7
msgid "Some text tags take an argument. In that case, the tag name is followed by an equals sign (=), and the argument. The argument may not contain the right-brace (}) character. The meaning of the argument varies based on the text tag."
msgstr ""

#: ../../source/text.rst:148
# 6d7f8c3f3e464b569884a5dcef948334
msgid "General Text Tags"
msgstr ""

#: ../../source/text.rst:150
# ff5710f5bf804a3eafad0bad87747bb1
msgid "Tags that apply to all text are:"
msgstr ""

#: ../../source/text.rst:154
# 9c1e51dd560440aea88e9991cc5e6492
msgid "The anchor tag creates a hyperlink between itself and its closing tag. While the behavior of the hyperlink is controlled by the :propref:`hyperlink_functions` style property, the default handler has the following behavior."
msgstr ""

#: ../../source/text.rst:159
# bebb3cb062b24b918d5832582b7d5c0b
msgid "Hyperlinks are rendered using the ``style.hyperlink_text`` style."
msgstr ""

#: ../../source/text.rst:161
# 99bfc86240384e4995f96ea487dc013b
msgid "If the argument begins with the text ``\"http://\"``, clicking on it opens the url in a web browser. Otherwise, the argument is interpreted as a label, which is called in a new context. This allows hyperlinks to be used to define terms."
msgstr ""

#: ../../source/text.rst:166
# 91e737b4e4d54367a06e1d3210439dcf
msgid "Apart from the change in style, there is no specific behavior when a hyperlink is hovered."
msgstr ""

#: ../../source/text.rst:190
# 60f5daa5a4d7427cb0ea204e1bc0adbb
msgid "The bold tag renders the text between itself and its closing tag in a bold font. ::"
msgstr ""

#: ../../source/text.rst:197
# d8c325db19b7483aa70bd4ffe370c87c
msgid "The color text tag renders the text between itself and its closing tag in the specified color. The color should be in #rgb, #rgba, #rrggbb, or #rrggbbaa format. ::"
msgstr ""

#: ../../source/text.rst:205
# 4fc28b8ccd0d4629a8f01c06a5927da6
msgid "The characters per second tag sets the speed of text display, for text between the tag and its closing tag. If the argument begins with an asterisk, it's taken as a multiplier to the current text speed. Otherwise, the argument gives the speed to show the text at, in characters per second. ::"
msgstr ""

#: ../../source/text.rst:215
# 071655f5ed744b189e12a31302be4897
msgid "The font tag renders the text between itself and its closing tag in the specified font. The argument is the filename of the font to use. ::"
msgstr ""

#: ../../source/text.rst:223
# 8945bd473fbf4da4a63af40dd6e012ce
msgid "The italics tag renders the text between itself and its closing tag in italics. ::"
msgstr ""

#: ../../source/text.rst:230
# f08f578e314f4ec2b691bb90815aec08
msgid "The kerning tag is a tag that adjust the kerning of characters between itself and its closing tag. It takes as an argument a floating point number giving the number of pixels of kerning to add to each kerning pair. (The number may be negative to decrease kerning.) ::"
msgstr ""

#: ../../source/text.rst:240
# a6924e97d0f24e3186bb7a42ebe1f9f0
msgid "The image tag is a self-closing tag that inserts an image into the text. The image should be the height of a single line of text. The argument should be either the image filename, or the name of an image defined with the image statement. ::"
msgstr ""

#: ../../source/text.rst:249
# 5cc9ba7ebe3a4b42971609fc288269f7
msgid "The strikethrough tag draws a line through text between itself and its closing tag. ::"
msgstr ""

#: ../../source/text.rst:256
# d40c6aa33e5d4a3c91b3cb1ce9fef14b
msgid "The ruby bottom tag marks text between itself and its closing tag as ruby bottom text. See the section on :ref:`Ruby Text <ruby-text>` for more information."
msgstr ""

#: ../../source/text.rst:262
# fbc21bfc1dbf4855aca73c4385eefcb3
msgid "The ruby top tag marks text between itself and its closing tag as ruby top text. See the section on :ref:`Ruby Text <ruby-text>` for more information."
msgstr ""

#: ../../source/text.rst:268
# 7e057f0c339d41fe9fe15f850d8aaf38
msgid "The size tag changes the size of text between itself and its closing tag. The argument should be an integer, optionally preceded by + or -. If the argument is just an integer, the size is set to that many pixels high. Otherwise, the size is increased or decreased by that amount. ::"
msgstr ""

#: ../../source/text.rst:278
# 6d124897fc5c4d23871f59bbf56df273
msgid "The space tag is a self-closing tag that inserts horizontal space into a line of text. As an argument, it takes an integer giving the number of pixels of space to add. ::"
msgstr ""

#: ../../source/text.rst:286
# daababf8cc194eec871b525759341eef
msgid "The underline tag underlines the text between itself and its closing tag. ::"
msgstr ""

#: ../../source/text.rst:293
# 4b9c2faeb6214ca8b4fc3b7fd524c1b4
msgid "The vspace tag is a self-closing tag that inserts vertical space between lines of text. As an argument, it takes an integer giving the number of pixels of space to add. ::"
msgstr ""

#: ../../source/text.rst:301
# ae20a5931d4242c1a73f67bf50347977
msgid "Text tags beginning with # are ignored, but can be included to distinguish strings for the purpose of translation. ::"
msgstr ""

#: ../../source/text.rst:307
# 6ce7dc7813d54192b23d687cac89b5e4
msgid "Dialogue Text Tags"
msgstr ""

#: ../../source/text.rst:309
# 9097eb63c77340deba428e84b5da17fd
msgid "Text tags that only apply to dialogue are:"
msgstr ""

#: ../../source/text.rst:313
# db91de5943834ba1b63411766b16e8df
msgid "If the fast tag is displayed in a line of text, then all text before it is displayed instantly, even in slow text mode. The fast tag is a self-closing tag. ::"
msgstr ""

#: ../../source/text.rst:323
# 4bf2c35ede2b44fc884ba9608b7a1cde
msgid "The no-wait tag is a self-closing tag that causes the current line of dialogue to automatically dismiss itself once the end of line has been displayed. ::"
msgstr ""

#: ../../source/text.rst:333
# 65a565f114d044cb90f4af08c6c54e84
msgid "The paragraph pause tag is a self-closing tag that terminates the current paragraph, and waits for the user to click to continue. If it is given an argument, the argument is interpreted as a number, and the wait automatically ends after that many seconds have passed. ::"
msgstr ""

#: ../../source/text.rst:343
# a4d9896d31364041a63b0ef72261ef86
msgid "The wait tag is a self-closing tag that waits for the user to click to continue. If it is given an argument, the argument is interpreted as a number, and the wait automatically ends after that many seconds have passed. ::"
msgstr ""

#: ../../source/text.rst:352
# a28e33fe6ea14efc83b8cdd345d9c7ae
msgid "User-Defined Text Tags"
msgstr ""

#: ../../source/text.rst:354
# 2b7e69ee893346f5a0f107bbdd27d41a
msgid "Ren'Py also supports user-defined text tags. A user-defined text tag is a text tag where the tag name is empty. In this case, the argument is taken to be the name of a style. The text between this tag and the closing tag has the following properties set to those defined in the style:"
msgstr ""

#: ../../source/text.rst:360
# 217975d1d4fd4a87819c429924ddd081
msgid "antialias"
msgstr ""

#: ../../source/text.rst:361
# b289a6ac723d45139c39a7955e630369
msgid "font"
msgstr ""

#: ../../source/text.rst:362
# 182f280754c34e03afa10d9d369f6f4e
msgid "size"
msgstr ""

#: ../../source/text.rst:363
# 7f79f2da151b43faa2e98d394cf1bb49
msgid "bold"
msgstr ""

#: ../../source/text.rst:364
# 810af5be548d424397f4588ee2f6b4bb
msgid "italic"
msgstr ""

#: ../../source/text.rst:365
# fc8566d32d72476fbe25dabb216e4e2f
msgid "underline"
msgstr ""

#: ../../source/text.rst:366
# b97b8064fdc64b9c8f3da9b7c2dbadfd
msgid "strikethrough"
msgstr ""

#: ../../source/text.rst:367
# 17c7e8e90d844dfaab39ad2fccb7aa79
msgid "color"
msgstr ""

#: ../../source/text.rst:368
# 3454b424edca4150a90580c7e7206ba6
msgid "black_color"
msgstr ""

#: ../../source/text.rst:369
# e783c3938f5a48509c3079763c37c1aa
msgid "kerning"
msgstr ""

#: ../../source/text.rst:373
# 712d041ffd5a4f738fcc448689dd8fa4
msgid "Non-English Languages"
msgstr ""

#: ../../source/text.rst:375
# 3555fb869fc94919884a6820b543d248
msgid "The default font for Ren'Py contains characters for English and many other languages. For size reasons, it doesn't contain the characters required to render other languages, including Chinese, Japanese, and Korean. In order to support these language, a project must first change the default font, using code like::"
msgstr ""

#: ../../source/text.rst:384
# 96d16ca61e624f4caef1fc89666e26df
msgid "Ren'Py should then support most world languages without further configuration. However, Korean can be written with or without spacing between words. Ren'Py has a special mode to support Korean with spaces, which can be enabled with the code::"
msgstr ""

#: ../../source/text.rst:392
# e9b3589c48784e19bafd8995198a62cd
msgid "Japanese has multiple rules for line breaking. We recommend starting with \"japanese-normal\", and moving to \"japanese-loose\" or \"japanese-strict\" for more or less break opportunities, respectively.::"
msgstr ""

#: ../../source/text.rst:399
# 63e81f384cf24757ad066497fd94eb83
msgid "Ideographic languages provide a large number of opportunities for line breaking. To enable a faster but less-accurate line-breaking algorithm, use the code::"
msgstr ""

#: ../../source/text.rst:406
# d485b999df4c497fa207ca2d0726c343
msgid "The faster line-breaking algorithm is not be necessary unless the game is displaying huge amounts of text, such as in NVL-mode."
msgstr ""

#: ../../source/text.rst:409
# 81fa3dd31ff049488342ce58fba626d9
msgid "The line breaking algorithms can be further configured using the :func:`renpy.language_tailor` function."
msgstr ""

#: ../../source/text.rst:414
# 4fe2be55426a4519891f34ace5763e5a
msgid "Vertical Text"
msgstr ""

#: ../../source/text.rst:416
# d44cc2df37d14ea7bcefdc71d167d3eb
msgid "When the :propref:`vertical` style property is set, Ren'Py will produce vertically oriented text. The text is written top-to-bottom, right-to-left."
msgstr ""

#: ../../source/text.rst:420
# 77a303844fab434388e6141eb69e3af3
msgid "There are two text tags that interact with vertical text."
msgstr ""

#: ../../source/text.rst:424
# 843d67b02f984fa4851474df4d1c4a68
msgid "Includes horizontally-oriented text inside vertical text."
msgstr ""

#: ../../source/text.rst:428
# aefa06e6c50b40489931fade7795c133
msgid "Includes vertically-oriented text inside horizontal text. (This will not rotate the text to the vertical orientation.)"
msgstr ""

#: ../../source/text.rst:435
# 1705175054ac4fab8bf5d4f70ecafcad
msgid "Ruby Text"
msgstr ""

#: ../../source/text.rst:437
# bc3bc82de7c04ce996b3db627fe40bac
msgid "Ruby text (also known as furigana or interlinear annotations) is a way of placing small text above a character or word. There are several steps required for your game to support Ruby text."
msgstr ""

#: ../../source/text.rst:441
# 8e1644e8034a4923af8ddba15a3e21d0
msgid "First, you must set up styles for the ruby text. The following style changes are required:"
msgstr ""

#: ../../source/text.rst:444
# 37ff53f82af14afdb696786b5e6d1653
msgid "The :propref:`line_leading` property must be used to leave enough vertical space for the ruby text."
msgstr ""

#: ../../source/text.rst:446
# 49722e56a5264b7db47bf748837c4e93
msgid "A new named style must be created. The properties of this style, such as :propref:`size` should be set in a fashion appropriate for ruby text."
msgstr ""

#: ../../source/text.rst:449
# ee7e223578924d06a6a315a079bce5de
msgid "The yoffset of the new style should be set, in order to move the ruby text above the baseline."
msgstr ""

#: ../../source/text.rst:451
# f236fe04a0df4242909f7f0e429a79a6
msgid "The :propref:`ruby_style` field of the text's style should be set to the newly-created style."
msgstr ""

#: ../../source/text.rst:454
#: ../../source/text.rst:471
#: ../../source/text.rst:553
# 2503963cbef64c0190f203c65f12f1f1
# 93fda69c46bd43879439abf0cf3e04e0
# 38e02f0267024b1eac14013ab3997930
msgid "For example::"
msgstr ""

#: ../../source/text.rst:465
# cbb3a5e6a79e459992e809a713c645fb
msgid "Once Ren'Py has been configured, ruby text can be included using the rt and rb text tags. The rt tag is used to mark one or more characters to be displayed as ruby text. If the ruby text is preceded by text enclosed in the rb tag, the ruby text is centered over that text. Otherwise, it is centered over the preceding character."
msgstr ""

#: ../../source/text.rst:477
# f14ed4e75cd944d6b8a36c768bce28ae
msgid "It's the creator's responsibility to ensure that ruby text does not leave the boundaries of the text. It may be necessary to add leading or spaces to the left and right of the text to prevent these errors from occurring."
msgstr ""

#: ../../source/text.rst:483
# c951c98269674374ac21607b84d98f15
msgid "Fonts"
msgstr ""

#: ../../source/text.rst:485
# 3c7dda3d8b754284917ef48300ab84c7
msgid "Ren'Py supports Truetype and Image-Based fonts."
msgstr ""

#: ../../source/text.rst:487
# 1e74a7fa22e542d588c50c09db332482
msgid "A Truetype font is specified by giving the name of the font file. The file must be present in the game directory, or one of the archive files."
msgstr ""

#: ../../source/text.rst:491
# b5bd9403c26b435ba0d43b83fb5d34e4
msgid "Ren'Py also supports Truetype collections that define more than one font. When accessing a collection, use the 0-based font index, followed by an at-sign and the file name. For example, \"0@font.ttc\" is the first font in a collection, \"1@font.ttc\" the second, and so on."
msgstr ""

#: ../../source/text.rst:498
# 5bdbe184fe374bc586d8cd4f94499108
msgid "Font Replacement"
msgstr ""

#: ../../source/text.rst:500
# a15bb94d9b0d4cc49ca398ba233a3297
msgid "The :var:`config.font_replacement_map` variable is used to map fonts. The combination of font filename, boldness, and italics is mapped to a similar combination. This allows a font with proper italics to be used instead of the automatically-generated italics."
msgstr ""

#: ../../source/text.rst:505
# 710fb8f987374c87a9d1e60f37b7d7cb
msgid "Once such mapping would be to replace the italic version of the Deja Vu Sans font with the official oblique version. (You'll need to download the oblique font from the web.)::"
msgstr ""

#: ../../source/text.rst:512
# 7cf82653a2f24daf8cc3e486644886c0
msgid "This mapping can improve the look of italic text."
msgstr ""

#: ../../source/text.rst:515
# 542a2295803c4a0a96ee8e744afd3332
msgid "Image-Based Fonts"
msgstr ""

#: ../../source/text.rst:517
# 5a04f5c1dc7f4c83ba1c34aa7a8b28f5
msgid "Image based fonts can be registered by calling one of the following registration functions. Registering an image-based font requires the specification of a name, size, boldness, italicness, and underline. When all of these properties match the registered font, the registered font is used."
msgstr ""

#: ../../source/inc/image_fonts:5
# 4aa21f3d2a6a4a5698fd9077e915f219
msgid "This registers a BMFont with the given details. Please note that size, bold, italic, and underline are all advisory (used for matching), and do not change the appearance of the font."
msgstr ""

#: ../../source/inc/image_fonts:9
# 15cefeaa4475448a83ee85cd6bfa84e8
msgid "Please see the `BMFont home page <http://www.angelcode.com/products/bmfont/>`_ for the tool that creates BMFonts. Ren'Py expects that the filename parameter will be to a file in the BMFont text format, that describes a 32-bit font. The Alpha channel should contain the font information, while the Red, Green, and Blue channels should be set to one. The image files, kerning, and other control information is read out of the BMFont file."
msgstr ""

#: ../../source/inc/image_fonts:16
# 9ed8595f495848e5a269766d3acbb7b9
msgid "We recommend including Latin and General Punctuation as part of your BMFont, to ensure all of the Ren'Py interface can render."
msgstr ""

#: ../../source/inc/image_fonts:20
#: ../../source/inc/image_fonts:49
#: ../../source/inc/image_fonts:89
# 3cdf30cc99a14fe98d84baf09eeb598f
# b58dffd36f804696a77d914175413cfb
# 8b7147cbee5647d3a0bf1068402b4d54
msgid "`name`"
msgstr ""

#: ../../source/inc/image_fonts:20
#: ../../source/inc/image_fonts:49
#: ../../source/inc/image_fonts:89
# fda867104e0d45d4a29d7ce17a3e4e18
# ad6afeca725340c1b8c472103b547856
# 52209c3efc0b41cea145ad3bf74e2fe4
msgid "The name of the font being registered, a string."
msgstr ""

#: ../../source/inc/image_fonts:23
#: ../../source/inc/image_fonts:52
#: ../../source/inc/image_fonts:92
# 939abcdb970e4d3dbc0261a0d41cc8e1
# 1b66647fa6d044b4a722619f5f0beb84
# 687f7a14807549bda5bebf7d864266cf
msgid "`size`"
msgstr ""

#: ../../source/inc/image_fonts:23
#: ../../source/inc/image_fonts:52
#: ../../source/inc/image_fonts:92
# e5af00479a2647d3980b79d300653394
# 09ba184758334921be6c85f254e40dde
# c0f8bed8fdfc46aaa9fb596927571267
msgid "The size of the font being registered, an integer."
msgstr ""

#: ../../source/inc/image_fonts:26
#: ../../source/inc/image_fonts:55
#: ../../source/inc/image_fonts:95
# 05e289ab745645be95ca591496544d3a
# 9f87566383f24e64a5667c606c3eb05c
# ddf4b4a1f0fb44e6a9946c1da006ace9
msgid "`bold`"
msgstr ""

#: ../../source/inc/image_fonts:26
#: ../../source/inc/image_fonts:55
#: ../../source/inc/image_fonts:95
# 7bee62f3840042fa89489c978677fc4e
# e96161cc04664532b2b69f58f7205488
# 4b6d8f9b7a7f4df8bc532cdd5a0be173
msgid "The boldness of the font being registered, a boolean."
msgstr ""

#: ../../source/inc/image_fonts:29
#: ../../source/inc/image_fonts:58
#: ../../source/inc/image_fonts:98
# 5c4887914f1348eea27ee587a82e071c
# ff54d5602e724f129e01e38b35a6e966
# 78c416e7c79d4289a9d5ac0645cc12f0
msgid "`italics`"
msgstr ""

#: ../../source/inc/image_fonts:29
#: ../../source/inc/image_fonts:58
#: ../../source/inc/image_fonts:98
# 879319f49e33428ea3a1abc741663e4c
# d3c5a8252818445da04c9deb16888686
# 36f447cc569845abbfc29a098b666db1
msgid "The italicness of the font being registered, a boolean."
msgstr ""

#: ../../source/inc/image_fonts:32
#: ../../source/inc/image_fonts:61
#: ../../source/inc/image_fonts:101
# 7b5d8d487639462597934cec82c415b9
# 268fe235f51a4d0fad7bd8de3548c31b
# dc2535feb10447b4bb721b8726d5c31c
msgid "`underline`"
msgstr ""

#: ../../source/inc/image_fonts:32
#: ../../source/inc/image_fonts:61
#: ../../source/inc/image_fonts:101
# c7ef005c81ea4e73bf528c850c43c3be
# 52a34afd27214767a7772cc7a4b045fc
# 0d3bfd96644c4909b53d0a9b1f087f41
msgid "An ignored parameter."
msgstr ""

#: ../../source/inc/image_fonts:34
#: ../../source/inc/image_fonts:65
#: ../../source/inc/image_fonts:104
# 686c7a3feb78460ab551cca5f183e6b7
# 7cbb86099b7441b7a6ed8210bff1c169
# 88cd11f547d64880acba6985b6e232f2
msgid "`filename`"
msgstr ""

#: ../../source/inc/image_fonts:35
# a0d7e4b39dd444409351d4079975aca9
msgid "The file containing BMFont control information."
msgstr ""

#: ../../source/inc/image_fonts:39
# 8901534e9ebf4b5b965c5361b5db94b5
msgid "This registers a MudgeFont with the given details. Please note that size, bold, italic, and underline are all advisory (used for matching), and do not change the appearance of the font."
msgstr ""

#: ../../source/inc/image_fonts:43
# 7b72a195adf84ebab85f6d6cf5b9f00f
msgid "Please see the `MudgeFont home page <http://www.larryhastings.com/programming/mudgefont/>`_ for the tool that creates MudgeFonts. Ren'Py assumes that character codes found in the MudgeFont xml file are unicode character numbers, and ignores negative character codes."
msgstr ""

#: ../../source/inc/image_fonts:64
# 0fa586e623934c72b5179d5b4c69d261
msgid "The file containing the MudgeFont image, a string. The image is usually a TGA file, but could be a PNG or other format that Ren'PY supports."
msgstr ""

#: ../../source/inc/image_fonts:68
# fb3ef428d0434556947d546ca19382b6
msgid "`xml`"
msgstr ""

#: ../../source/inc/image_fonts:68
# 9b40772887c341878ee1567d4b2aa54c
msgid "The xml file containing information generated by the MudgeFont tool."
msgstr ""

#: ../../source/inc/image_fonts:71
#: ../../source/inc/image_fonts:107
# c132bc6f18844c4ea6c3a30c361e7cfa
# 8338e541fe674a7787d953882a36aac3
msgid "`spacewidth`"
msgstr ""

#: ../../source/inc/image_fonts:71
#: ../../source/inc/image_fonts:107
# 2c4ccfe97ff64619a7183fae10665b29
# a81a82edce4b448fa211edadc25e8db8
msgid "The width of a space character, an integer in pixels."
msgstr ""

#: ../../source/inc/image_fonts:74
#: ../../source/inc/image_fonts:110
# d9a3b24b0d9341128f65f41bad557d67
# e468759f736948a3807d10c433ba706f
msgid "`default_kern`"
msgstr ""

#: ../../source/inc/image_fonts:74
#: ../../source/inc/image_fonts:110
# 89b4a0b0c2b247bca97fc0d2e2422546
# 41e3f70b45e145d683d6954fd022cde5
msgid "The default kern spacing between characters, in pixels."
msgstr ""

#: ../../source/inc/image_fonts:77
#: ../../source/inc/image_fonts:114
# dfeecafd129b45d6aa48276d905a4ad0
# 0461a36ca76244688b6157774c0b7303
msgid "`kerns`"
msgstr ""

#: ../../source/inc/image_fonts:77
#: ../../source/inc/image_fonts:113
# 8f6a619de1314e0680558f71e45c9650
# 3d654c65c83e47379001d165289f0785
msgid "A map from two-character strings to the kern that should be used between those characters."
msgstr ""

#: ../../source/inc/image_fonts:82
# 7774b0fbd8de4e889e86628fe256443a
msgid "This registers an SFont with the given details. Please note that size, bold, italic, and underline are all advisory (used for matching), and do not change the appearance of the font."
msgstr ""

#: ../../source/inc/image_fonts:86
# 51b4dd41bce14b9d9edfab215c327ab8
msgid "`More information about SFont. <http://www.linux-games.com/sfont/>`_"
msgstr ""

#: ../../source/inc/image_fonts:104
# 033578ee5fd242d8814834d7b054b560
msgid "The file containing the sfont image, a string."
msgstr ""

#: ../../source/inc/image_fonts:121
# 37ebf79d1aef420183777d59bc5d270c
msgid "`charset` - The character set of the font. A string containing characters in"
msgstr ""

#: ../../source/inc/image_fonts:117
# e8e52d0dafde4ced808e2274de4f4abe
msgid "the order in which they are found in the image. The default character set for a SFont is::"
msgstr ""

#: ../../source/text.rst:525
# 987efa482dbb4fb987cf11f7ec4e1c1a
msgid "As BMFont is the most complete of the three image font formats Ren'Py supports, it's the one recommended for new projects. An example of BMFont use is::"
msgstr ""

#: ../../source/text.rst:540
# a1471680eb8246f7a4d37ac120eeec6d
msgid "Font Groups"
msgstr ""

#: ../../source/text.rst:542
# b9a6a434291e4522af12495a008011c4
msgid "When creating a multilingual game, it may not be possible to find a single font that covers every writing system the game use while projecting the the mood the creator intends. To support this, Ren'Py supports font groups that can take characters from two or more fonts and combine them into a single font."
msgstr ""

#: ../../source/text.rst:548
# 43d7ebd0ed4a4927b08936e72fa7c6aa
msgid "To create a font group, create a FontGroup object and call the .add method on it once or more. a FontGroup can be used wherever a font name can be used. The add method takes the start and end of a range of unicode character points, and the first range to cover a point is used."
msgstr ""

#: ../../source/inc/font_group:5
# c54c61fab83443f59c50c0d1c090d1e2
msgid "A group of fonts that can be used as a single font."
msgstr ""

#: ../../source/inc/font_group:9
# db121cd015a242e3a6286a4c1cf5e2a1
msgid "Associates a range of characters with a `font`."
msgstr ""

#: ../../source/inc/font_group:13
# 0da45d42e53d4603ac237da28f128623
msgid "`start`"
msgstr ""

#: ../../source/inc/font_group:12
# bfa3f3684b9248618582b05518b4fe19
msgid "The start of the range. This may be a single-character string, or an integer giving a unicode code point."
msgstr ""

#: ../../source/inc/font_group:17
# 5fa343a35cb8424797aba6c4d624d904
msgid "`end`"
msgstr ""

#: ../../source/inc/font_group:16
# 7915780350cf4ff29f156d6399c67c9a
msgid "The end of the range. This may be a single-character string, or an integer giving a unicode code point."
msgstr ""

#: ../../source/inc/font_group:19
# fc1c5704ce0846e6897da10d146df4cc
msgid "When multiple .add() calls include the same character, the first call takes precedence."
msgstr ""

#: ../../source/inc/font_group:22
# 5136a3176bdd42a996f34f082c0da96f
msgid "This returns the FontGroup, so that multiple calls to .add() can be chained together."
msgstr ""

#: ../../source/text.rst:562
# 56edc97587b443c1818e1ba7cbbc4526
msgid "Text Displayable"
msgstr ""

#: ../../source/text.rst:564
# 1de36f594a654a1698ba10a4c0cb56c1
msgid "Text can also be used as a :ref:`displayable <displayables>`, which allows you to apply transforms to text, displaying it as if it was an image and moving it around the screen."
msgstr ""

#: ../../source/inc/text:5
# 9b46640bacbb4234ae4d179a7480c6d0
msgid "A displayable that displays text on the screen."
msgstr ""

#: ../../source/inc/text:9
# ed3de343f238486999fe3edf779e1fd1
msgid "`text`"
msgstr ""

#: ../../source/inc/text:8
# 280cbc7169924f3ca3e8e8914c423c50
msgid "The text to display on the screen. This may be a string, or a list of strings and displayables."
msgstr ""

#: ../../source/inc/text:14
# d3a4d2650e194bceba10f5f46789cbe6
msgid "`slow`"
msgstr ""

#: ../../source/inc/text:12
# 88d87949e7584f71b14259075932b8ec
msgid "Determines if the text is displayed slowly, being typed out one character at the time. If None, slow text mode is determined by the :propref:`slow_cps` style property. Otherwise, the truth value of this parameter determines if slow text mode is used."
msgstr ""

#: ../../source/inc/text:18
# c07fbf0755a041c1b15542c2eb35fbee
msgid "`scope`"
msgstr ""

#: ../../source/inc/text:17
# 4784befb63ea4a5ba46289e923612250
msgid "If not None, this should be a dictionary that provides an additional scope for text interpolation to occur in."
msgstr ""

#: ../../source/inc/text:21
# b968ae4e85fa431492ca0170dc49b5bd
msgid "`substitute`"
msgstr ""

#: ../../source/inc/text:21
# 83659d2773f74ca983d6832abd26f2b5
msgid "If true, text interpolation occurs. If false, it will not occur. If None, they are controlled by :var:`config.new_substitutions`."
msgstr ""

#: ../../source/text.rst:571
# 96fa7cae54784e2bb33fb8b4f06ee5d1
msgid "Slow Text Concerns"
msgstr ""

#: ../../source/text.rst:573
# 602cb13f3ebe4dabafdf8dc4fab71788
msgid "Ren'Py allows the creator or user to indicate that text should be displayed slowly. In this case, Ren'Py will render the text to a texture, and then draw rectangles from the texture to the screen."
msgstr ""

#: ../../source/text.rst:577
# d3a474e54c8f4844bbedc6db36f08fe2
msgid "Unfortunately, this means that it's possible to get rendering artifacts when characters overlap. To minimize these rendering artifacts, ensure that the :propref:`line_leading` and :propref:`line_spacing` properties are large enough that lines do not overlap. If the bottoms of characters on the first line are clipped, espeically if line_spacing is negative, consider increasing :propref:`line_overlap_split`."
msgstr ""

#: ../../source/text.rst:585
# 4916b28f8baf4a0bbb2d74b004518996
msgid "Horizontal artifacts are also possible when characters are kerned together, but these artifacts are less severe, as they exist for only a single frame."
msgstr ""

#: ../../source/text.rst:589
# 67dee2489fb54576b355e5ab3edfe7af
msgid "Artifacts aren't a problem for static text, like the text in menus and other parts of the user interface."
msgstr ""

#: ../../source/text.rst:593
# 167d2c79e1c847669fbfaa5ed0a24274
msgid "Text Overflow Logging"
msgstr ""

#: ../../source/text.rst:595
# f347dbdaaeb44aaf92ae30dbf039e3b9
msgid "Ren'Py can log cases where text expands outside of the area allocated for it. To enable text overflow logging, the following steps are necessary."
msgstr ""

#: ../../source/text.rst:599
# 038bc6ec269841828108d3e9e1f78dc0
msgid "Set the :var:`config.debug_text_overflow` variable to true."
msgstr ""

#: ../../source/text.rst:600
# 605f0369f9254109ac32dff4dc763d65
msgid "Set the :propref:`xmaximum` and :propref:`ymaximum` style properties on either the Text displayable, or a container enclosing it."
msgstr ""

#: ../../source/text.rst:602
# a4e47f03101e4e649904790d38655774
msgid "Run the game."
msgstr ""

#: ../../source/text.rst:604
# 93e5b5a497b940118e5222e682490cd0
msgid "Whenever text is displayed that overflows the available area, Ren'Py will log an error to the ``text_overflow.txt`` file."
msgstr ""

