# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.15.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-25 09:05\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/text.rst:8
# 5e33fe9a29bb443ca675898603435771
msgid "Text"
msgstr ""

#: ../../source/text.rst:10
# bc73508a54e04143a9635a5d92401086
msgid "Ren'Py contains several ways of displaying text. The :ref:`say <say-statement>` and :ref:`menu <menu-statement>` are primarily concerned with the display of text to the user. The user interface often contains text, displayed using the :ref:`text <sl-text>`, :ref:`textbutton <sl-textbutton>`, and :ref:`label <sl-label>` screen language statements. These functions, along with others, create :func:`Text` displayables, and show them on the screen."
msgstr ""

#: ../../source/text.rst:18
# 26baa825f12844ee9e8f89a775a34a01
msgid "The Text displayable is responsible for managing the process of showing the text to the user. The text displayable performs actions in the following order:"
msgstr ""

#: ../../source/text.rst:23
# a389cf74629d41a08e8a7ecba5463fb4
msgid "Translating text."
msgstr ""

#: ../../source/text.rst:24
# 7596713a51944e81977525b7e1544d60
msgid "Interpolating data into the text."
msgstr ""

#: ../../source/text.rst:25
# 8993eb6c25ea4b79acabe743b14e78a8
msgid "Styling the text using styles and text tags."
msgstr ""

#: ../../source/text.rst:26
# dba5d9071a2f4d9486fa407096fdbfaf
msgid "Laying out the styled text."
msgstr ""

#: ../../source/text.rst:27
# a6f89608ff584e3e970a580975f7f9be
msgid "Drawing the text to the screen."
msgstr ""

#: ../../source/text.rst:29
# b5d3cecc5c27453090c9e76c829469b1
msgid "This chapter discusses the process of text display in Ren'Py."
msgstr ""

#: ../../source/text.rst:33
# 7a1aa157dbd84979b7d88f5c8b9834bd
msgid "Escape Characters"
msgstr ""

#: ../../source/text.rst:35
# 1f47b9772e884451996665224f029204
msgid "There are three special characters that can control the way Ren'Py displays text. A creator needs to be aware of these characters to ensure that their writing is not accidentally misinterpreted by the engine."
msgstr ""

#: ../../source/text.rst:58
# bf9958c7955848d79e26e1ed02724353
msgid "\\ (backslash)"
msgstr ""

#: ../../source/text.rst:40
# b26f9c540d6b4b65b914a45c4a90e9da
msgid "The backslash character is used to introduce when writing a Ren'Py or Python string. Some common escape codes are:"
msgstr ""

#: ../../source/text.rst:44
# 751dd485eb9c49ac8d4cfa0d2e5e952a
msgid "\\\\\" (backslash-doublequote)"
msgstr ""

#: ../../source/text.rst:44
# 5a19c22bd9de4c458375ca3bced81e8b
msgid "Includes a doublequote in a double-quoted string."
msgstr ""

#: ../../source/text.rst:47
# fdaa7de08e5f4248a0c8bcdabcff1b62
msgid "\\\\' (backslash-quote)"
msgstr ""

#: ../../source/text.rst:47
# 589f6bad794f4ca2be6ee1ffa65655f7
msgid "Includes a single quote in a single-quoted string."
msgstr ""

#: ../../source/text.rst:52
# cc2f994dcd9241699e46d0cfba80b466
msgid "\\\\\\  (backslash-space)"
msgstr ""

#: ../../source/text.rst:50
# d7c40f85e0fa4ff59bb3897df8c437c4
msgid "Includes an additional space in a Ren'Py string. By default, Ren'Py script text collapses adjacent whitespace into a single space character."
msgstr ""

#: ../../source/text.rst:55
# f884e8fa73e44270a7cfed4b1d7b1bfd
msgid "\\\\n (backslash-n)"
msgstr ""

#: ../../source/text.rst:55
# e2df9e8efbf24e4a81bc24a8e45eef87
msgid "Includes a newline character in the text."
msgstr ""

#: ../../source/text.rst:58
# 9e107bb6c732410bbd4de0e4ebb698d6
msgid "\\\\\\\\ (backslash-backslash)"
msgstr ""

#: ../../source/text.rst:58
# 89c61006b3334f4283dbf22887cd8566
msgid "Includes a backslash character in the text."
msgstr ""

#: ../../source/text.rst:63
# 62fd54610627433c9ab5c8e4aaf27d5e
msgid "[ (left bracket)"
msgstr ""

#: ../../source/text.rst:61
# 3bd948de18134be7b0426920d34e4b8e
msgid "The left bracket is used to introduce interpolation of a value into the text. To include a single left bracket in your text, double it - write ``[[``."
msgstr ""

#: ../../source/text.rst:68
# c115d86fda76445cb24151f5d2c4aeb7
msgid "{ (left brace)"
msgstr ""

#: ../../source/text.rst:66
# 7b6405b92ac040c69c36fa2e4a25f92a
msgid "The left brace is used to introduce a text tag. To include a left brace in your text, double it - write ``{{``."
msgstr ""

#: ../../source/text.rst:71
# 10dbae7f5caa418fa82433cf2d883c83
msgid "Interpolating Data"
msgstr ""

#: ../../source/text.rst:73
# dc867fe733f7437fb9a3fe796a0d37eb
msgid "Ren'Py supports interpolating data into the text string before it is displayed. For example, if the player's name is stored in the ``playername`` variable, one could write a line of dialogue like::"
msgstr ""

#: ../../source/text.rst:79
# 36b657e6b8cb46edbd373c1fc1aeb9a1
msgid "Ren'Py will interpolate variables found in the global store. When using a text widget in a screen, Ren'Py will also interpolate screen local variables. (This can be overridden by supplying an explicit scope argument to the Text displayable.)"
msgstr ""

#: ../../source/text.rst:84
# d61b369b3dbe4711a800adfaacd557fe
msgid "Ren'Py isn't limited to interpolating simple variables. It can also interpolate fields and components of tuples. So it's possible to have code like::"
msgstr ""

#: ../../source/text.rst:90
# b72980c0bbbc438db92f633b5f9bb93f
msgid "It's possible to apply formatting codes when displaying numbers. This code will display a floating point number to two decimal places::"
msgstr ""

#: ../../source/text.rst:96
# 82f558a5aa604a4f9d8c6bc1fce61718
msgid "Ren'Py's string interpolation is taken from the :pep:`3101` string formatting syntax. Ren'Py uses [ to introduce string formatting because { was taken by text tags."
msgstr ""

#: ../../source/text.rst:100
# 13902eb7c64e4821bf3f353a60063f36
msgid "Along with the !s and !r conversion flags supported by Python, Ren'Py supports !q and !t conversion flag. The !q conversion flag ensures that text tags are properly quoted, so that displaying a string will not introduce unwanted formatting constructs. For example::"
msgstr ""

#: ../../source/text.rst:107
# 53d15275aba24d41ab1e136142a1c44e
msgid "The !t flag will translate the interpolated string::"
msgstr ""

#: ../../source/text.rst:118
# 977452abdaec4015a2e05ac2a1ad36e4
msgid "Styling and Text Tags"
msgstr ""

#: ../../source/text.rst:120
# eecf8c5e456f402e91a6d5e55020212a
msgid "In Ren'Py, text gains style information in two ways. The first is from the style that is applied to the entire block of text. Please see the section about the :ref:`style system <styles>` for more details, especially the section on :ref:`text style properties <text-style-properties>`."
msgstr ""

#: ../../source/text.rst:125
# 328c21fb3f7d4f3c994f705d87aa4d29
msgid "The second way is through text tags. Text tags are suitable for styling a portion of text block, or a small fraction of the text blocks in the program. If you find yourself applying the same text tags to every line of text, consider using a style instead."
msgstr ""

#: ../../source/text.rst:130
# 86b35e24dee349538b2c91bdab4bae7b
msgid "There are two text tags. Some text tags are self-closing, while others require a closing tag. When multiple closing tags are used, they should be closed last open, first closed order - Ren'Py will reject incorrect nesting. For example::"
msgstr ""

#: ../../source/text.rst:142
# 63b70024cbe8445cb13bc077b572c268
msgid "Some text tags take an argument. In that case, the tag name is followed by an equals sign (=), and the argument. The argument may not contain the right-brace (}) character. The meaning of the argument varies based on the text tag."
msgstr ""

#: ../../source/text.rst:148
# 1a89624d620e4ff58d84a3546b837fb5
msgid "General Text Tags"
msgstr ""

#: ../../source/text.rst:150
# 0929bfe01c324fc580992462a356d193
msgid "Tags that apply to all text are:"
msgstr ""

#: ../../source/text.rst:154
# 48727b1f99ff428294f06064a719f9c2
msgid "The anchor tag creates a hyperlink between itself and its closing tag. While the behavior of the hyperlink is controlled by the :propref:`hyperlink_functions` style property, the default handler has the following behavior."
msgstr ""

#: ../../source/text.rst:159
# eb973abb5cb04882902f8c2bcdb84dd4
msgid "Hyperlinks are rendered using the ``style.hyperlink_text`` style."
msgstr ""

#: ../../source/text.rst:161
# cb5bbd9fb14641bd873d3be3d3b2d30f
msgid "If the argument begins with the text ``\"http://\"``, clicking on it opens the url in a web browser. Otherwise, the argument is interpreted as a label, which is called in a new context. This allows hyperlinks to be used to define terms."
msgstr ""

#: ../../source/text.rst:166
# da025848af3a4b1bb0929576d08b9865
msgid "Apart from the change in style, there is no specific behavior when a hyperlink is hovered."
msgstr ""

#: ../../source/text.rst:190
# 71008aa4f7f14410bec4f59ba13dbee1
msgid "The bold tag renders the text between itself and its closing tag in a bold font. ::"
msgstr ""

#: ../../source/text.rst:197
# b6c3cef2385245e6a047c6f5983593dc
msgid "The color text tag renders the text between itself and its closing tag in the specified color. The color should be in #rgb, #rgba, #rrggbb, or #rrggbbaa format. ::"
msgstr ""

#: ../../source/text.rst:205
# e949702f53be46768b7c5dfb08d5faba
msgid "The characters per second tag sets the speed of text display, for text between the tag and its closing tag. If the argument begins with an asterisk, it's taken as a multiplier to the current text speed. Otherwise, the argument gives the speed to show the text at, in characters per second. ::"
msgstr ""

#: ../../source/text.rst:215
# 3a701817f51c4f149a4768da7b2ef312
msgid "The font tag renders the text between itself and its closing tag in the specified font. The argument is the filename of the font to use. ::"
msgstr ""

#: ../../source/text.rst:223
# 45b9d31bfac142fc81f73fd80843b824
msgid "The italics tag renders the text between itself and its closing tag in italics. ::"
msgstr ""

#: ../../source/text.rst:230
# 2d78347f76944e4dbda1b1e984f1770f
msgid "The kerning tag is a tag that adjust the kerning of characters between itself and its closing tag. It takes as an argument a floating point number giving the number of pixels of kerning to add to each kerning pair. (The number may be negative to decrease kerning.) ::"
msgstr ""

#: ../../source/text.rst:240
# 8324dd8f1d36424689eb7e000abec97d
msgid "The image tag is a self-closing tag that inserts an image into the text. The image should be the height of a single line of text. The argument should be either the image filename, or the name of an image defined with the image statement. ::"
msgstr ""

#: ../../source/text.rst:249
# b11a1028b4794fe98380ff0e9bf49865
msgid "The strikethrough tag draws a line through text between itself and its closing tag. ::"
msgstr ""

#: ../../source/text.rst:256
# 9c3b732af9cc461a94ad539b768f0e53
msgid "The ruby bottom tag marks text between itself and its closing tag as ruby bottom text. See the section on :ref:`Ruby Text <ruby-text>` for more information."
msgstr ""

#: ../../source/text.rst:262
# 24316204f6454570b2c6d30f1b9b03c0
msgid "The ruby top tag marks text between itself and its closing tag as ruby top text. See the section on :ref:`Ruby Text <ruby-text>` for more information."
msgstr ""

#: ../../source/text.rst:268
# 002c4d4864204b428e056a06737c097e
msgid "The size tag changes the size of text between itself and its closing tag. The argument should be an integer, optionally preceded by + or -. If the argument is just an integer, the size is set to that many pixels high. Otherwise, the size is increased or decreased by that amount. ::"
msgstr ""

#: ../../source/text.rst:278
# f73edd407e8044ccbec7e9c2c8cc410c
msgid "The space tag is a self-closing tag that inserts horizontal space into a line of text. As an argument, it takes an integer giving the number of pixels of space to add. ::"
msgstr ""

#: ../../source/text.rst:286
# d421f12af55648b6988e11e4e6f57588
msgid "The underline tag underlines the text between itself and its closing tag. ::"
msgstr ""

#: ../../source/text.rst:293
# 35cdc6443cb64b1689fc9f50653765d1
msgid "The vspace tag is a self-closing tag that inserts vertical space between lines of text. As an argument, it takes an integer giving the number of pixels of space to add. ::"
msgstr ""

#: ../../source/text.rst:301
# 675b0b80a85e4a3eafddd2718867b6ed
msgid "Text tags beginning with # are ignored, but can be included to distinguish strings for the purpose of translation. ::"
msgstr ""

#: ../../source/text.rst:307
# 4d7ba244d7044213a218cad9307f370f
msgid "Dialogue Text Tags"
msgstr ""

#: ../../source/text.rst:309
# a1c4e757f71447d0afdb8731637754d0
msgid "Text tags that only apply to dialogue are:"
msgstr ""

#: ../../source/text.rst:313
# 215bad347977471db4a65c6460bec8fe
msgid "If the fast tag is displayed in a line of text, then all text before it is displayed instantly, even in slow text mode. The fast tag is a self-closing tag. ::"
msgstr ""

#: ../../source/text.rst:323
# fa86e4f1bd0f4ad1acc3f0a611716628
msgid "The no-wait tag is a self-closing tag that causes the current line of dialogue to automatically dismiss itself once the end of line has been displayed. ::"
msgstr ""

#: ../../source/text.rst:333
# a566782a376d4b8b95053b974551b29c
msgid "The paragraph pause tag is a self-closing tag that terminates the current paragraph, and waits for the user to click to continue. If it is given an argument, the argument is interpreted as a number, and the wait automatically ends after that many seconds have passed. ::"
msgstr ""

#: ../../source/text.rst:343
# 1eb72a2151ee46188ab08900e64e033c
msgid "The wait tag is a self-closing tag that waits for the user to click to continue. If it is given an argument, the argument is interpreted as a number, and the wait automatically ends after that many seconds have passed. ::"
msgstr ""

#: ../../source/text.rst:352
# 5e38d7adae26468a943453652694e5ab
msgid "User-Defined Text Tags"
msgstr ""

#: ../../source/text.rst:354
# d0d37eb1a4cf452ea2e1290f1544339d
msgid "Ren'Py also supports user-defined text tags. A user-defined text tag is a text tag where the tag name is empty. In this case, the argument is taken to be the name of a style. The text between this tag and the closing tag has the following properties set to those defined in the style:"
msgstr ""

#: ../../source/text.rst:360
# f5c820116c27458292a2954b1410f0a3
msgid "antialias"
msgstr ""

#: ../../source/text.rst:361
# 65644c7007664310ad90db58363406ee
msgid "font"
msgstr ""

#: ../../source/text.rst:362
# f74cdbe232cc4037a867bb3232862c2c
msgid "size"
msgstr ""

#: ../../source/text.rst:363
# b159f107df4a459095d51d4d09ca7cd6
msgid "bold"
msgstr ""

#: ../../source/text.rst:364
# 072909b5d87240afbd390eb4c21d55be
msgid "italic"
msgstr ""

#: ../../source/text.rst:365
# a07dbfd846ac456e8bb875c0c1098582
msgid "underline"
msgstr ""

#: ../../source/text.rst:366
# dddd4940cdb14804860ffe6687ff11ed
msgid "strikethrough"
msgstr ""

#: ../../source/text.rst:367
# fb9583ff700a4f2dac9bb18a37df23cd
msgid "color"
msgstr ""

#: ../../source/text.rst:368
# c773867837334e2d982c9e14cce5f548
msgid "black_color"
msgstr ""

#: ../../source/text.rst:369
# d62f38cfbcb7485289eb6c954561ba0e
msgid "kerning"
msgstr ""

#: ../../source/text.rst:373
# d89ce21015e54d3990567c0a5c8b4fc8
msgid "Non-English Languages"
msgstr ""

#: ../../source/text.rst:375
# 092c55baacc84474ad2efbc8888b9d45
msgid "The default font for Ren'Py contains characters for English and many other languages. For size reasons, it doesn't contain the characters required to render other languages, including Chinese, Japanese, and Korean. In order to support these language, a project must first change the default font, using code like::"
msgstr ""

#: ../../source/text.rst:384
# 10f44c3c6c0240e2969d9f022df40346
msgid "Ren'Py should then support most world languages without further configuration. However, Korean can be written with or without spacing between words. Ren'Py has a special mode to support Korean with spaces, which can be enabled with the code::"
msgstr ""

#: ../../source/text.rst:392
# f9c91d0421f54f55aaaf292fdf67dfd7
msgid "Japanese has multiple rules for line breaking. We recommend starting with \"japanese-normal\", and moving to \"japanese-loose\" or \"japanese-strict\" for more or less break opportunities, respectively.::"
msgstr ""

#: ../../source/text.rst:399
# 3ee20071d88a45b9930c967e98e717dd
msgid "Ideographic languages provide a large number of opportunities for line breaking. To enable a faster but less-accurate line-breaking algorithm, use the code::"
msgstr ""

#: ../../source/text.rst:406
# 990c718a95cd42d0bb0ef154efbc2b47
msgid "The faster line-breaking algorithm is not be necessary unless the game is displaying huge amounts of text, such as in NVL-mode."
msgstr ""

#: ../../source/text.rst:409
# cbf9f852e4734f52aefb2f5c3e04b940
msgid "The line breaking algorithms can be further configured using the :func:`renpy.language_tailor` function."
msgstr ""

#: ../../source/text.rst:414
# e815553d30c14449aedb3cec843316b2
msgid "Vertical Text"
msgstr ""

#: ../../source/text.rst:416
# c89fa55052f240a9b7e89745135a128a
msgid "When the :propref:`vertical` style property is set, Ren'Py will produce vertically oriented text. The text is written top-to-bottom, right-to-left."
msgstr ""

#: ../../source/text.rst:420
# 015c973e62bf413199470a29cdb226c1
msgid "There are two text tags that interact with vertical text."
msgstr ""

#: ../../source/text.rst:424
# b10f0068195f475cac9963925366386d
msgid "Includes horizontally-oriented text inside vertical text."
msgstr ""

#: ../../source/text.rst:428
# f46585451d204d54a72acd1243d86297
msgid "Includes vertically-oriented text inside horizontal text. (This will not rotate the text to the vertical orientation.)"
msgstr ""

#: ../../source/text.rst:435
# 954a32c5b9c74aca804e0e77404e3bd7
msgid "Ruby Text"
msgstr ""

#: ../../source/text.rst:437
# 9d6cb412f92d4101b9242d0e228af8fc
msgid "Ruby text (also known as furigana or interlinear annotations) is a way of placing small text above a character or word. There are several steps required for your game to support Ruby text."
msgstr ""

#: ../../source/text.rst:441
# 68907e10739a4cf3ba83dee7cf31ef68
msgid "First, you must set up styles for the ruby text. The following style changes are required:"
msgstr ""

#: ../../source/text.rst:444
# 6e94cbe8671f405cbcb3393562f48868
msgid "The :propref:`line_leading` property must be used to leave enough vertical space for the ruby text."
msgstr ""

#: ../../source/text.rst:446
# 6bdaa13f85b944c6bf79a7f73dd5e64b
msgid "A new named style must be created. The properties of this style, such as :propref:`size` should be set in a fashion appropriate for ruby text."
msgstr ""

#: ../../source/text.rst:449
# cac11205a9894e9199318d5a5210ae4b
msgid "The yoffset of the new style should be set, in order to move the ruby text above the baseline."
msgstr ""

#: ../../source/text.rst:451
# 3b7cf08da7534d108e0da293222214b9
msgid "The :propref:`ruby_style` field of the text's style should be set to the newly-created style."
msgstr ""

#: ../../source/text.rst:454
#: ../../source/text.rst:471
#: ../../source/text.rst:553
# fdd308f830c7478fb856652761322c06
# 8184789d1c2e405187f5d40d15d3c31d
# 07a9579b9eb24f00a8530e955c59fa0a
msgid "For example::"
msgstr ""

#: ../../source/text.rst:465
# 3fc76b40ab3241428754c7091c8a55f3
msgid "Once Ren'Py has been configured, ruby text can be included using the rt and rb text tags. The rt tag is used to mark one or more characters to be displayed as ruby text. If the ruby text is preceded by text enclosed in the rb tag, the ruby text is centered over that text. Otherwise, it is centered over the preceding character."
msgstr ""

#: ../../source/text.rst:477
# 144b63c399fa4858b7b8a09554f5c79f
msgid "It's the creator's responsibility to ensure that ruby text does not leave the boundaries of the text. It may be necessary to add leading or spaces to the left and right of the text to prevent these errors from occurring."
msgstr ""

#: ../../source/text.rst:483
# 73dc612ee8a04662800c0518048ba66a
msgid "Fonts"
msgstr ""

#: ../../source/text.rst:485
# 7a5bcd6f5bee43d59e9ab53d15d2b5fe
msgid "Ren'Py supports Truetype and Image-Based fonts."
msgstr ""

#: ../../source/text.rst:487
# 9671f4b4b9d24b8cb8bd9b85910697db
msgid "A Truetype font is specified by giving the name of the font file. The file must be present in the game directory, or one of the archive files."
msgstr ""

#: ../../source/text.rst:491
# 0128186b504a4b3697fb6ed0a4d9a336
msgid "Ren'Py also supports Truetype collections that define more than one font. When accessing a collection, use the 0-based font index, followed by an at-sign and the file name. For example, \"0@font.ttc\" is the first font in a collection, \"1@font.ttc\" the second, and so on."
msgstr ""

#: ../../source/text.rst:498
# 7868337e1c9144908006c0afba2a0f35
msgid "Font Replacement"
msgstr ""

#: ../../source/text.rst:500
# f710f00fb7d84842afa14e14c28220b5
msgid "The :var:`config.font_replacement_map` variable is used to map fonts. The combination of font filename, boldness, and italics is mapped to a similar combination. This allows a font with proper italics to be used instead of the automatically-generated italics."
msgstr ""

#: ../../source/text.rst:505
# 5a34a24f13ce4aeab1302a63fcb14b50
msgid "Once such mapping would be to replace the italic version of the Deja Vu Sans font with the official oblique version. (You'll need to download the oblique font from the web.)::"
msgstr ""

#: ../../source/text.rst:512
# 5b8e8bd351f649888c3903c181f9cbc5
msgid "This mapping can improve the look of italic text."
msgstr ""

#: ../../source/text.rst:515
# fe6dd9b2cca24e7b88fb697bdcb6a630
msgid "Image-Based Fonts"
msgstr ""

#: ../../source/text.rst:517
# 95c75690e645477bad979ccf22e0111c
msgid "Image based fonts can be registered by calling one of the following registration functions. Registering an image-based font requires the specification of a name, size, boldness, italicness, and underline. When all of these properties match the registered font, the registered font is used."
msgstr ""

#: ../../source/inc/image_fonts:5
# 06d603825834492396d55c941d9daee9
msgid "This registers a BMFont with the given details. Please note that size, bold, italic, and underline are all advisory (used for matching), and do not change the appearance of the font."
msgstr ""

#: ../../source/inc/image_fonts:9
# 85e0702371d340bdbf4f53077c25d623
msgid "Please see the `BMFont home page <http://www.angelcode.com/products/bmfont/>`_ for the tool that creates BMFonts. Ren'Py expects that the filename parameter will be to a file in the BMFont text format, that describes a 32-bit font. The Alpha channel should contain the font information, while the Red, Green, and Blue channels should be set to one. The image files, kerning, and other control information is read out of the BMFont file."
msgstr ""

#: ../../source/inc/image_fonts:16
# 5dd1234976ea43bd991f5cb44b57def8
msgid "We recommend including Latin and General Punctuation as part of your BMFont, to ensure all of the Ren'Py interface can render."
msgstr ""

#: ../../source/inc/image_fonts:20
#: ../../source/inc/image_fonts:49
#: ../../source/inc/image_fonts:89
# 610e63e4979643c3bd75ed9021558288
# 9097082a142c443490acb6a8144166ea
# 9ebb6c3c39954504b9d41518f06f0cf6
msgid "`name`"
msgstr ""

#: ../../source/inc/image_fonts:20
#: ../../source/inc/image_fonts:49
#: ../../source/inc/image_fonts:89
# 61d86489d5e242fe9334c3d5ba6c0156
# bc4344e78e1c4d059faa238d7453cdb7
# d137bbdf7e704aaaa0f282ebc3cebac8
msgid "The name of the font being registered, a string."
msgstr ""

#: ../../source/inc/image_fonts:23
#: ../../source/inc/image_fonts:52
#: ../../source/inc/image_fonts:92
# b95dd7b9aab341708a20c3ddaf07e9f1
# b0b9aebb6e15413786969f136c7a3632
# dc36e307aba14ad78ea1ff949bb3c413
msgid "`size`"
msgstr ""

#: ../../source/inc/image_fonts:23
#: ../../source/inc/image_fonts:52
#: ../../source/inc/image_fonts:92
# 4489212f33b348db80462d19e7d9c476
# 11180778023a4ea78e189500a769d800
# d6d482448b9043d985fb940a3710a388
msgid "The size of the font being registered, an integer."
msgstr ""

#: ../../source/inc/image_fonts:26
#: ../../source/inc/image_fonts:55
#: ../../source/inc/image_fonts:95
# 9a0522a7ed214d75acdabed490729a90
# 2b5abcf56d0f4adebc004f34d39b3259
# 70d21fc3f3214a1fa69bbab29a2eaa9b
msgid "`bold`"
msgstr ""

#: ../../source/inc/image_fonts:26
#: ../../source/inc/image_fonts:55
#: ../../source/inc/image_fonts:95
# 0858f67b64e040d3be050b726d7b32e5
# cc0140cde7ee4dc1ba50fe5a034636d7
# 65992639b367493593fd06316fbb4738
msgid "The boldness of the font being registered, a boolean."
msgstr ""

#: ../../source/inc/image_fonts:29
#: ../../source/inc/image_fonts:58
#: ../../source/inc/image_fonts:98
# 4b88d269ee524a5aa2ab2df6af58f52e
# 333acaf63d4a4de1b4748c809f9b89f2
# dab5ec26ba274dafa3d308833c998955
msgid "`italics`"
msgstr ""

#: ../../source/inc/image_fonts:29
#: ../../source/inc/image_fonts:58
#: ../../source/inc/image_fonts:98
# 9d1af472eebb4f6c9458f4227bceb3c2
# 3abdff1e48c34436866ee56764ceec33
# 1b449c5199164e24a97cf76174fa16fa
msgid "The italicness of the font being registered, a boolean."
msgstr ""

#: ../../source/inc/image_fonts:32
#: ../../source/inc/image_fonts:61
#: ../../source/inc/image_fonts:101
# a9f3f3b604f14644bbd97738dfb72907
# 5552dbf2708643719bf4b9f14af6d7d0
# 31ab2fb4b114471bb31ac7abbb7f79bb
msgid "`underline`"
msgstr ""

#: ../../source/inc/image_fonts:32
#: ../../source/inc/image_fonts:61
#: ../../source/inc/image_fonts:101
# 4e8a0ae1cddb4d1788940f3a36541573
# c68ad7f198254016aaaf5babeb549a44
# 62d65d44d72a48ea8b7b194282ca9375
msgid "An ignored parameter."
msgstr ""

#: ../../source/inc/image_fonts:34
#: ../../source/inc/image_fonts:65
#: ../../source/inc/image_fonts:104
# 62ba8cab576641a19aac635fa38ebb53
# 95a04150f41446b6b092783ccffcd675
# 9aa7efa1c65c447cbfa2e2039ec01548
msgid "`filename`"
msgstr ""

#: ../../source/inc/image_fonts:35
# c481a4cf1aa7443ba34bf187c1af4303
msgid "The file containing BMFont control information."
msgstr ""

#: ../../source/inc/image_fonts:39
# af988db122a9407a85f5afb83ea33a5e
msgid "This registers a MudgeFont with the given details. Please note that size, bold, italic, and underline are all advisory (used for matching), and do not change the appearance of the font."
msgstr ""

#: ../../source/inc/image_fonts:43
# 665a1dfeb9084504a0596f15bbc399a0
msgid "Please see the `MudgeFont home page <http://www.larryhastings.com/programming/mudgefont/>`_ for the tool that creates MudgeFonts. Ren'Py assumes that character codes found in the MudgeFont xml file are unicode character numbers, and ignores negative character codes."
msgstr ""

#: ../../source/inc/image_fonts:64
# 22298aa4770845c9a8f331905d331e08
msgid "The file containing the MudgeFont image, a string. The image is usually a TGA file, but could be a PNG or other format that Ren'PY supports."
msgstr ""

#: ../../source/inc/image_fonts:68
# d12ea1bcde5f422080ffb6c5fbb4a1bc
msgid "`xml`"
msgstr ""

#: ../../source/inc/image_fonts:68
# 14745a34fac9495187c230730e90887e
msgid "The xml file containing information generated by the MudgeFont tool."
msgstr ""

#: ../../source/inc/image_fonts:71
#: ../../source/inc/image_fonts:107
# 279aa48042714913b323f4d953c3f919
# c9739fb6323546eba9cfe28418ded481
msgid "`spacewidth`"
msgstr ""

#: ../../source/inc/image_fonts:71
#: ../../source/inc/image_fonts:107
# 0a4260e5ea984cb0ac5efeffd9d70200
# 01147f52218c4ed5b18ad8b980012b45
msgid "The width of a space character, an integer in pixels."
msgstr ""

#: ../../source/inc/image_fonts:74
#: ../../source/inc/image_fonts:110
# 669ba39c735842599b60566a17cc2f99
# 5d0a679c326447bda42cd4bbb2b5802b
msgid "`default_kern`"
msgstr ""

#: ../../source/inc/image_fonts:74
#: ../../source/inc/image_fonts:110
# 8e2430b5c19a41f8bf5780505cb37e71
# 8fb99186ea794ed0a8d797095dd25d32
msgid "The default kern spacing between characters, in pixels."
msgstr ""

#: ../../source/inc/image_fonts:77
#: ../../source/inc/image_fonts:114
# 96cf95a1b7c1444d8469c49cb8fb5b3a
# 3b2f4c78a47c4252b793acbda9287cab
msgid "`kerns`"
msgstr ""

#: ../../source/inc/image_fonts:77
#: ../../source/inc/image_fonts:113
# 64b6f05be4fa4c4e87a1459f20943934
# b3d3200e39fe44f38060db8b7d9a54e0
msgid "A map from two-character strings to the kern that should be used between those characters."
msgstr ""

#: ../../source/inc/image_fonts:82
# 33d17bbb72e649e59782d133adbf0b8b
msgid "This registers an SFont with the given details. Please note that size, bold, italic, and underline are all advisory (used for matching), and do not change the appearance of the font."
msgstr ""

#: ../../source/inc/image_fonts:86
# 017b6de7b789413c91fb033af699dae5
msgid "`More information about SFont. <http://www.linux-games.com/sfont/>`_"
msgstr ""

#: ../../source/inc/image_fonts:104
# d0876f22e1324d1284feb97846ecb70e
msgid "The file containing the sfont image, a string."
msgstr ""

#: ../../source/inc/image_fonts:121
# 003becc7b517400f83bb088699392aff
msgid "`charset` - The character set of the font. A string containing characters in"
msgstr ""

#: ../../source/inc/image_fonts:117
# 00d6d336fb6542b8ab851dc4d6e96b9b
msgid "the order in which they are found in the image. The default character set for a SFont is::"
msgstr ""

#: ../../source/text.rst:525
# 466f468d937942518cb17758db980395
msgid "As BMFont is the most complete of the three image font formats Ren'Py supports, it's the one recommended for new projects. An example of BMFont use is::"
msgstr ""

#: ../../source/text.rst:540
# a75cf771878b4866bab491def3d81582
msgid "Font Groups"
msgstr ""

#: ../../source/text.rst:542
# 224a591bbb9f4eb281511956c60f4af8
msgid "When creating a multilingual game, it may not be possible to find a single font that covers every writing system the game use while projecting the the mood the creator intends. To support this, Ren'Py supports font groups that can take characters from two or more fonts and combine them into a single font."
msgstr ""

#: ../../source/text.rst:548
# 576db1ac42e546459ef1659706a99b9f
msgid "To create a font group, create a FontGroup object and call the .add method on it once or more. a FontGroup can be used wherever a font name can be used. The add method takes the start and end of a range of unicode character points, and the first range to cover a point is used."
msgstr ""

#: ../../source/inc/font_group:5
# fa50bfcdb09545079bcb569cbe7f6c84
msgid "A group of fonts that can be used as a single font."
msgstr ""

#: ../../source/inc/font_group:9
# 9177cb15a4014792bd095e6e3cc956b9
msgid "Associates a range of characters with a `font`."
msgstr ""

#: ../../source/inc/font_group:13
# 68fa8e4879f8451b8e1bafdc9bbaa00e
msgid "`start`"
msgstr ""

#: ../../source/inc/font_group:12
# 84e2e3decf7846f3ae9824b7eac829c6
msgid "The start of the range. This may be a single-character string, or an integer giving a unicode code point."
msgstr ""

#: ../../source/inc/font_group:17
# 78ae2ac6d62f436db4f3dcf02fc861f2
msgid "`end`"
msgstr ""

#: ../../source/inc/font_group:16
# 5c471a2ab58644eeab68b2304479ca5e
msgid "The end of the range. This may be a single-character string, or an integer giving a unicode code point."
msgstr ""

#: ../../source/inc/font_group:19
# 0e77e03158034f6ca31206a6afe35846
msgid "When multiple .add() calls include the same character, the first call takes precedence."
msgstr ""

#: ../../source/inc/font_group:22
# 87196a4c2a6a46ccae447016faca3de5
msgid "This returns the FontGroup, so that multiple calls to .add() can be chained together."
msgstr ""

#: ../../source/text.rst:562
# ec46dd95c01b4210ab5c658b10092e40
msgid "Text Displayable"
msgstr ""

#: ../../source/text.rst:564
# 51d8547a63bc4434b9b5fae419f290c0
msgid "Text can also be used as a :ref:`displayable <displayables>`, which allows you to apply transforms to text, displaying it as if it was an image and moving it around the screen."
msgstr ""

#: ../../source/inc/text:5
# de6ce4dbb80d414b80192ac2b7063966
msgid "A displayable that displays text on the screen."
msgstr ""

#: ../../source/inc/text:9
# 827b41b5599d4df482040699cd7ff879
msgid "`text`"
msgstr ""

#: ../../source/inc/text:8
# 12c1a1ef509641d18e33c19249abffba
msgid "The text to display on the screen. This may be a string, or a list of strings and displayables."
msgstr ""

#: ../../source/inc/text:14
# bbbc11533ea4483c91c9948fe21163d7
msgid "`slow`"
msgstr ""

#: ../../source/inc/text:12
# 31f38545b9214405ac70e086918bbf08
msgid "Determines if the text is displayed slowly, being typed out one character at the time. If None, slow text mode is determined by the :propref:`slow_cps` style property. Otherwise, the truth value of this parameter determines if slow text mode is used."
msgstr ""

#: ../../source/inc/text:18
# 2b023e10648b40869a1a803d374c0800
msgid "`scope`"
msgstr ""

#: ../../source/inc/text:17
# d77255c5141f4f59a4a6c8cda1ac6b05
msgid "If not None, this should be a dictionary that provides an additional scope for text interpolation to occur in."
msgstr ""

#: ../../source/inc/text:21
# 45e50ff03d35435781dc76ce6cf13b98
msgid "`substitute`"
msgstr ""

#: ../../source/inc/text:21
# 4ed610ecc1dd4840b90fd85dbf9b508d
msgid "If true, text interpolation occurs. If false, it will not occur. If None, they are controlled by :var:`config.new_substitutions`."
msgstr ""

#: ../../source/text.rst:571
# 470fc875746e4f328c1d618ef1df695f
msgid "Slow Text Concerns"
msgstr ""

#: ../../source/text.rst:573
# 6594c47e4f6c47d1b7a3132952a67be9
msgid "Ren'Py allows the creator or user to indicate that text should be displayed slowly. In this case, Ren'Py will render the text to a texture, and then draw rectangles from the texture to the screen."
msgstr ""

#: ../../source/text.rst:577
# c1d38ef72172473999fdf57db1d1851e
msgid "Unfortunately, this means that it's possible to get rendering artifacts when characters overlap. To minimize these rendering artifacts, ensure that the :propref:`line_leading` and :propref:`line_spacing` properties are large enough that lines do not overlap. If the bottoms of characters on the first line are clipped, espeically if line_spacing is negative, consider increasing :propref:`line_overlap_split`."
msgstr ""

#: ../../source/text.rst:585
# eafb3d0023304337afd2546b68347e01
msgid "Horizontal artifacts are also possible when characters are kerned together, but these artifacts are less severe, as they exist for only a single frame."
msgstr ""

#: ../../source/text.rst:589
# 599edafca75b43ca9c8e17653ce114b8
msgid "Artifacts aren't a problem for static text, like the text in menus and other parts of the user interface."
msgstr ""

#: ../../source/text.rst:593
# f6968be87a424d5a8ee5555edb362da6
msgid "Text Overflow Logging"
msgstr ""

#: ../../source/text.rst:595
# 97947e83a75c4527aa0a353836c8705e
msgid "Ren'Py can log cases where text expands outside of the area allocated for it. To enable text overflow logging, the following steps are necessary."
msgstr ""

#: ../../source/text.rst:599
# c91693e328a540c5b444e84a292de258
msgid "Set the :var:`config.debug_text_overflow` variable to true."
msgstr ""

#: ../../source/text.rst:600
# 6c6ea21cc1e948f1b345bde84bbffcb3
msgid "Set the :propref:`xmaximum` and :propref:`ymaximum` style properties on either the Text displayable, or a container enclosing it."
msgstr ""

#: ../../source/text.rst:602
# 33188b07e869432b9c2ba1d226a126d2
msgid "Run the game."
msgstr ""

#: ../../source/text.rst:604
# 3bc1847e6b9d4aefa7aff4856530b52d
msgid "Whenever text is displayed that overflows the available area, Ren'Py will log an error to the ``text_overflow.txt`` file."
msgstr ""

