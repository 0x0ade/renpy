# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.15.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 22:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/quickstart.rst:5
# 7120fa93d91b4138ac83a25ef7646313
msgid "Quickstart"
msgstr ""

#: ../../source/quickstart.rst:7
# c5ea1786f94b414899f09af1d8c568bc
msgid "Welcome to the Ren'Py quickstart manual. The purpose of this manual is to demonstrate how you can make a Ren'Py game from scratch, in a few easy steps. We'll do this by showing how to make a simple game, *The Question*, from scratch. This manual contains a number of examples, which are included as part of the demo game."
msgstr ""

#: ../../source/quickstart.rst:14
# 4317334445954ce48fa4e45be9a9784e
msgid "The Ren'Py Launcher"
msgstr ""

#: ../../source/quickstart.rst:17
# 1ebd512600cc45afbeffa6a54c774a30
msgid "Before you begin making a game, you should first take some time to learn how the Ren'Py launcher works. The launcher lets you create, manage, edit, and run Ren'Py projects."
msgstr ""

#: ../../source/quickstart.rst:21
# 622e2f9ad07b46df824a67b9b204919f
msgid "**Getting Started.** To get started you'll want to `download Ren'Py <http://www.renpy.org/wiki/renpy/Download_Ren'Py>`_."
msgstr ""

#: ../../source/quickstart.rst:24
# 96ee60d57a34444aa38b9236ff523966
msgid "Once you've downloaded Ren'Py, you'll want to extract it. This can generally be done by right-clicking on the package file, and picking \"Extract\" if that's an option, or \"Open\" if it's not. Follow the prompts, and you'll have a working copy of Ren'Py."
msgstr ""

#: ../../source/quickstart.rst:31
# 3827322c070741058dea78d0e3ec03af
msgid "Please be sure you've extracted Ren'Py to its own directory or folder on disk. If you try to run it from inside a ZIP file, it won't work properly."
msgstr ""

#: ../../source/quickstart.rst:35
# 9c4f7faef0f841b9ac99309a1cebdd8f
msgid "Once you've extracted Ren'Py, you'll need to run it."
msgstr ""

#: ../../source/quickstart.rst:37
# 734f6309deb64c77930d0fc304604430
msgid "On Windows, run the ``renpy`` or ``renpy.exe`` program."
msgstr ""

#: ../../source/quickstart.rst:38
# e07f782fe34f49a6b885885b977a7cc2
msgid "On Mac OS X, run the ``renpy`` application."
msgstr ""

#: ../../source/quickstart.rst:39
# feda78c3f6ac49ab8ade515af1a0ae7a
msgid "On Linux, run the ``renpy.sh`` script."
msgstr ""

#: ../../source/quickstart.rst:42
# 4c36982679b44b4b9d91383208332863
msgid "After running this, the Ren'Py launcher should run."
msgstr ""

#: ../../source/quickstart.rst:48
# c91420693aea4cb0afc40aa098fd738b
msgid "**Choosing and Launching a Project.** You should first see what the completed *The Question* game looks like. To do this, start the Ren'Py launcher, and choose \"Select Project\". A menu of projects will come up.  Choose \"the_question\" from it. You'll be returned to the main menu, and you can now choose \"Launch\" to start *The Question*."
msgstr ""

#: ../../source/quickstart.rst:55
# 231a3904edff4505a36a75dbc08092f4
msgid "You can get back to the Ren'Py demo by doing the same thing, but choosing \"demo\" instead of \"the_question\"."
msgstr ""

#: ../../source/quickstart.rst:58
# bd918d690a354bdeba006921b7a3c063
msgid "**Creating a new Project.** Create a new project by choosing \"New Project\" from the launcher. The launcher will ask you to choose a template.  Choose \"template\". The launcher will then ask you for a project name. Since \"the_question\" is already taken, you should enter something different, like \"My Question\". The launcher will then ask you to choose a color theme for the project. It doesn't matter what you pick at this point, just choose something that appeals to you. You'll be returned to the top menu of the launcher with your new game chosen."
msgstr ""

#: ../../source/quickstart.rst:69
# d581c82773b044b38ba5c75a43750a9f
msgid "A Simple Game"
msgstr ""

#: ../../source/quickstart.rst:84
# 689baa650ef94ae2963a04c0341e62b2
msgid "This is perhaps one of the simplest Ren'Py games. It doesn't include any pictures or anything like that, but it does show a conversation between the two characters."
msgstr ""

#: ../../source/quickstart.rst:88
# 0dbb69cbd252490cb5a88328e302952c
msgid "To try this out, go into the launcher, change to the \"My Question\" project, and pick \"Edit Script\". This will open the script files in a text editor. Choose the script.rpy file, and erase everything in it. We're starting from scratch, so you don't need what's there. Copy the example above into script.rpy, and save it."
msgstr ""

#: ../../source/quickstart.rst:94
# 7adeafe782074c0a88cb1be5e0bd8a25
msgid "You're now ready to run this example. Go back to the launcher, and click Run. Ren'Py will start up. Notice how, without any extra work, Ren'Py has given you menus that let you load and save the game, and change various preferences. When ready, click \"Start Game\", and play through this example game."
msgstr ""

#: ../../source/quickstart.rst:100
# 3bcf90e5018449629a28e2bd65a4a513
msgid "This example shows some of the commonly-used Ren'Py statements."
msgstr ""

#: ../../source/quickstart.rst:102
# f5b2c95f559547cdbc11e09ba5927096
msgid "The first line is a label statement. The label statement is used to give a name to a place in the program. In this case, we create a label named ``start``. The start label is special, as it's where Ren'Py scripts begin running when the user clicks \"Start Game\" on the main menu."
msgstr ""

#: ../../source/quickstart.rst:108
# 01e149546be440cba6f9323f8836de63
msgid "The other lines are say statements. There are two forms of the say statement. The first is a string (beginning with a double-quote, containing characters, and ending with a double-quote) on a line by itself, which is used for narration, and the thoughts of the main character. The second form consists of two strings. It's used for dialogue, with the first string being a character name and the second being what that character is saying."
msgstr ""

#: ../../source/quickstart.rst:116
# 166c4109739d416f958db529c4d202d5
msgid "Note that all the say statements are indented by four spaces. This is because they are a block underneath the label statement. In Ren'Py, blocks must be indented relative to the prior statement, and all of the statements in a block must be indented by the same amount."
msgstr ""

#: ../../source/quickstart.rst:121
# 2b3e5dd276534c798e95dc937081dc05
msgid "When strings contain double-quote characters, those characters need to be preceded by a backslash. This is done in the last line of our example."
msgstr ""

#: ../../source/quickstart.rst:125
# ed709c2edf7747cd8663d6f4f4a201b8
msgid "While this simple game isn't much to look at, it's an example of how easy it is to get something working in Ren'Py. We'll add the pictures in a little bit, but first, let's see how to declare characters."
msgstr ""

#: ../../source/quickstart.rst:130
# 79062936ec944a2c963f31f08e2f24e6
msgid "Characters"
msgstr ""

#: ../../source/quickstart.rst:132
# da9a02178a5042bca004c15b50d8f967
msgid "One problem with the first example is that it requires you to repeatedly type the name of a character each time they speak. In a dialogue-heavy game, this might be a lot of typing. Also, both character names are displayed in the same way, in fairly boring white text. To fix this, Ren'Py lets you define characters in advance. This lets you associate a short name with a character, and to change the color of the character's name."
msgstr ""

#: ../../source/quickstart.rst:157
# 364b8961a30b40c58abea2e449c87ec1
msgid "The first and and second lines define characters. The first line defines a character with the short name of \"s\", the long name \"Sylvie\", with a name that is shown in a greenish color. (The colors are red-green-blue hex triples, as used in web pages.)"
msgstr ""

#: ../../source/quickstart.rst:162
# ade6377c041b47d580a680fd8eafac59
msgid "The second line creates a character with a short name \"m\", a long name \"Me\", with the name shown in a reddish color. Other characters can be defined by copying one of the character lines, and changing the short name, long name, and color."
msgstr ""

#: ../../source/quickstart.rst:167
# 0758bffe6aa049f2b09e569ad229ecd3
msgid "We've also changed the say statements to use character objects instead of a character name string. This tells Ren'Py to use the characters we defined in the init block."
msgstr ""

#: ../../source/quickstart.rst:172
# aaef592719744f9e9835fea6e76eb4a0
msgid "Images"
msgstr ""

#: ../../source/quickstart.rst:174
# d288167602c74bd38954a2c878db7463
msgid "A visual novel isn't much of a visual novel without pictures. Let's add some pictures to our game."
msgstr ""

#: ../../source/quickstart.rst:207
# b08d5bb484ed45faad127c614f194fbf
msgid "The first new thing we needed to do was to declare the images, using image statements on lines 2, 3, 5, and 6, inside the init block. These image statements give an image name, and the filename the image is found in."
msgstr ""

#: ../../source/quickstart.rst:212
# 06d7fcba0f30488d891fb14124541a80
msgid "For example, line 5 declares an image named \"sylvie smile\", found in the filename \"sylvie_smile.png\", with the tag \"sylvie\"."
msgstr ""

#: ../../source/quickstart.rst:215
# 572fcb3120de4808be3e5517c9ed686b
msgid "We have a scene statement on line 12. This statement clears out the screen, and shows the \"bg meadow\" image. The next line is a show statement, which shows the \"sylvie smile\" image on the screen."
msgstr ""

#: ../../source/quickstart.rst:219
# 901e9e31ab84434a915fadc62b454ebe
msgid "The first part of an image name is the image tag. If an image is being shown, and another image with the same tag is on the screen, then the image that's on the screen is replaced with the one being shown. This happens on line 19, the second show statement. Before line 19 is run, the image \"sylvie smile\" is on the screen. When line 19 is run, that image is replaces with \"sylvie surprised\", since they share the \"sylvie\" tag."
msgstr ""

#: ../../source/quickstart.rst:227
# 6172b9b7408542b88ff78e5718bcdc95
msgid "For Ren'Py to find the image files, they need to be placed in the game directory of the current project. The game directory can be found at \"`Project-Name`/game/\", or by clicking the \"Game Directory\" button in the launcher. You'll probably want to copy the image files from the \"the_question/game/\" directory into the \"my_question/game/\" directory, so you can run this example."
msgstr ""

#: ../../source/quickstart.rst:234
# 80f6f38a2b1d4389b16d55cda2c0f405
msgid "Ren'Py does not make any distinction between character and background art, as they're both treated as images. In general, character art needs to be transparent, which means it should be a PNG file. Background art can be JPEG or PNG files. By convention, background images start with the \"bg\" tag."
msgstr ""

#: ../../source/quickstart.rst:240
# ac0e274a83ee45f9ad401bc71687f165
msgid "**Hide Statement.** Ren'Py also supports a hide statement, which hides the given image."
msgstr ""

#: ../../source/quickstart.rst:255
# 2a75df04deaf4a0b9bd5edf74c4b190d
msgid "It's actually pretty rare that you'll need to use hide. Show can be used when a character is changing emotions, while scene is used when everyone leaves. You only need to use hide when a character leaves and the scene stays the same."
msgstr ""

#: ../../source/quickstart.rst:261
# cd860d7f6c2140698d1e24c02795a9ce
msgid "Transitions"
msgstr ""

#: ../../source/quickstart.rst:263
# 14cf32e838c84fcba5711a09ecb10025
msgid "Simply having pictures pop in and out is boring, so Ren'Py implements transitions that can make changes to the screen more interesting. Transitions change the screen from what it looked like at the end of the last interaction (dialogue, menu, or transition), to what it looks like after any scene, show, and hide statements."
msgstr ""

#: ../../source/quickstart.rst:295
# cff00669a0354a95ac78ecaf77d4ebe5
msgid "The with statement takes the name of a transition to use. The most common one is ``dissolve`` which dissolves from one screen to the next. Another useful transition is ``fade`` which fades the screen to black, and then fades in the new screen."
msgstr ""

#: ../../source/quickstart.rst:300
# 7165736658b742e89e7aa833c6bb8846
msgid "When a transition is placed after multiple scene, show, or hide statements, it applies to them all at once. If you were to write::"
msgstr ""

#: ../../source/quickstart.rst:308
# f4ddda5dc95147e89e1d8a816d5efa2c
msgid "Both the \"bg meadow\" and \"sylvie smiles\" would be dissolved in at the same time. To dissolve them in one at a time, you need to write two with statements::"
msgstr ""

#: ../../source/quickstart.rst:318
# 463680dee2e044e298e54bf65fc8cb75
msgid "This first dissolves in the meadow, and then dissolves in sylvie. If you wanted to instantly show the meadow, and then show sylvie, you could write::"
msgstr ""

#: ../../source/quickstart.rst:328
# 72823447da9a495ca44720bbc18e9894
msgid "Here, None is used to indicate a special transition that updates Ren'Py's idea of what the prior screen was, without actually showing anything to the user."
msgstr ""

#: ../../source/quickstart.rst:333
# bce921285b6f4353b2da3ee9102d955e
msgid "Positions"
msgstr ""

#: ../../source/quickstart.rst:335
# a160bbf2bd864277b5abe9a53c223842
msgid "By default, images are shown centered horizontally, and with their bottom edge touching the bottom of the screen. This is usually okay for backgrounds and single characters, but when showing more than one character on the screen it probably makes sense to do it at another position. It also might make sense to reposition a character for story purposes."
msgstr ""

#: ../../source/quickstart.rst:347
# 90bba1a0e734468ea4dfd378e0c13827
msgid "To do this repositioning, add an at-clause to a show statement. The at clause takes a position, and shows the image at that position. Ren'Py includes several pre-defined positions: ``left`` for the right side of the screen, ``right`` for the right side, ``center`` for centered horizontally (the default), and ``truecenter`` for centered horizontally and vertically."
msgstr ""

#: ../../source/quickstart.rst:354
# f8ec7f3ecbeb46bc94002187ae5ab75a
msgid "A user can define their own positions, and event complicated moves, but that's outside of the scope of this quickstart."
msgstr ""

#: ../../source/quickstart.rst:358
# e2ed763fc4cd46faa0177376361b2a78
msgid "Music and Sound"
msgstr ""

#: ../../source/quickstart.rst:360
# 78c8d23739ce492aa804b70a12f9d2aa
msgid "Most games play music in the background. In Ren'Py, music files automatically loop until they are stopped by the user. Music is played with the play music statement. ::"
msgstr ""

#: ../../source/quickstart.rst:368
# 8d89cfa3c221466db3bcd44289219898
msgid "When changing music, one can supply a fadeout clause, which is used to fade out the old music when new music is played. ::"
msgstr ""

#: ../../source/quickstart.rst:374
# 5855dd3f0eba4411a956424f96610c42
msgid "Music can be stopped with the stop music statement, which can also optionally take a fadeout clause. ::"
msgstr ""

#: ../../source/quickstart.rst:380
# 91627f0d953846d181107e7b5d20e91b
msgid "Sound effects can be played with the play sound statement::"
msgstr ""

#: ../../source/quickstart.rst:385
# 51abcf8a2d6545cc8e4f600f9bbcd051
msgid "Ren'Py support many formats for sound and music, but OGG Vorbis is preferred. Like image files, sound and music files must be placed in the game directory."
msgstr ""

#: ../../source/quickstart.rst:390
# 55d02129d7e14702a3e3031fd46842c9
msgid "Ending the Game"
msgstr ""

#: ../../source/quickstart.rst:392
# e6d3fd716d2349689b5d2d3f08f3484a
msgid "You can end the game by running the return statement, without having called anything. Before doing this, it's best to put something in the game that indicates that the game is ending, and perhaps giving the user an ending number or ending name. ::"
msgstr ""

#: ../../source/quickstart.rst:402
# 690c756556a14202a8821c27c0daf7f5
msgid "That's all you need to make a kinetic novel, a game without any choices in it. Now, we'll look at what it takes to make a game that presents menus to the user."
msgstr ""

#: ../../source/quickstart.rst:407
# ec25a8a6072648adaabd5f86c3a212ff
msgid "Menus, Labels, and Jumps"
msgstr ""

#: ../../source/quickstart.rst:409
# 26c768e5a0c94acda2ba656441bf0f57
msgid "The menu statement lets you present a choice to the user::"
msgstr ""

#: ../../source/quickstart.rst:435
# d4d587a7e0a8432b94f9a46b85d3557e
msgid "This example shows how menus are used with Ren'Py. The menu statement introduces an in-game-menu. The menu statement takes a block of lines, each consisting of a string followed by a colon. These are the menu choices which are presented to the user. Each menu choice should be followed by a block of one or more Ren'Py statements. When a choice is chosen, the statements following it are run."
msgstr ""

#: ../../source/quickstart.rst:442
# 6494a98a43cf4e069620edac22fbf34e
msgid "In our example, each menu choice runs a jump statement. The jump statement transfers control to a label defined using the label statement. The code following that label is run."
msgstr ""

#: ../../source/quickstart.rst:446
# 6d912f25455045e9939ebc3bc479b924
msgid "In our example above, after Sylvie asks her question, the user is presented with a menu containing two choices. If the user picks \"It's a story with pictures.\", the first jump statement is run, and control is transferred to the vn label. This will cause the pov character to say \"It's a story with pictures and music.\", after which control is transferred to the marry label."
msgstr ""

#: ../../source/quickstart.rst:453
# 80ed9e8fd73c44cfb4aeb21d1167f9c4
msgid "Labels may be defined in any file that is in the game directory, and ends with .rpy. The filename doesn't matter to Ren'Py, only the labels contained within it. A label may only appear in a single file."
msgstr ""

#: ../../source/quickstart.rst:458
# dae2382557934e71b0224a8619d28510
msgid "Python and If Statements"
msgstr ""

#: ../../source/quickstart.rst:460
# 53cd43561cd74437b61fd249f657dadc
msgid "While simple (and even fairly complex) games can be made using only using menus and jump statements, after a point it becomes necessary to store the user's choices in variables, and access them again later. This is what Ren'Py's python support is for."
msgstr ""

#: ../../source/quickstart.rst:465
# 5f8c4deb9abf41a4bd3827bbe61e39f0
msgid "Python support can be accessed in two ways. A line beginning with a dollar-sign is a single-line python statement, while the keyword \"python:\" is used to introduce a block of python statements."
msgstr ""

#: ../../source/quickstart.rst:469
# 1983d431c4854f39aacaaa1a0ee0aaf4
msgid "Python makes it easy to store flags in response to user input. Just initialize the flag at the start of the game::"
msgstr ""

#: ../../source/quickstart.rst:475
# 6b952ec72de44501b745415a4b9b33ac
msgid "You can then change the flag in code that is chosen by menus::"
msgstr ""

#: ../../source/quickstart.rst:488
# 3b8d9e5e83784189b92f378202c7eb94
msgid "And check it later::"
msgstr ""

#: ../../source/quickstart.rst:498
# b1291eacf17947f0a463d8fabd12032f
msgid "Of course, python variables need not be simple True/False values. They can be arbitrary python values. They can be used to store the player's name, to store a points score, or for any other purpose. Since Ren'Py includes the ability to use the full Python programming language, many things are possible."
msgstr ""

#: ../../source/quickstart.rst:505
# b380938b984145c599ee5848cafc7bdc
msgid "Releasing Your Game"
msgstr ""

#: ../../source/quickstart.rst:507
# 3b25c19a9acf40489097199c2903f453
msgid "Once you've made a game, there are a number of things you should do before releasing it:"
msgstr ""

#: ../../source/quickstart.rst:515
# 10f50f97f5b74186ad5562c7329280a3
msgid "**Edit options.rpy.**"
msgstr ""

#: ../../source/quickstart.rst:511
# 0c39b1075aab4964913829dcc648e6d2
msgid "The options.rpy file, created when you create a new game, contains a number of settings that you may want to customize. Some of them, like the screen height and screen width, should probably be set before making the game. Others, like the window title, can be set any time."
msgstr ""

#: ../../source/quickstart.rst:520
# 95a7b3c5320845ecb2b19963c11cb2a9
msgid "**Add a plug for Ren'Py.**"
msgstr ""

#: ../../source/quickstart.rst:518
# f14d788cbbdf47cc85d1f3f0e7431e33
msgid "This step is completely optional, but we do ask that if you have credits in your game, you mention Ren'Py in them. We suggest using something like \"Made with the Ren'Py visual novel engine.\", but that's just a suggestion, and what you write is up to you."
msgstr ""

#: ../../source/quickstart.rst:520
# 8bfbf75a3d3c49c0bc0109fda49688a8
msgid "We think that the games people make are the best advertising for Ren'Py, and we hope that by including this, you'll help more people learn how to make visual novels in Ren'Py."
msgstr ""

#: ../../source/quickstart.rst:528
# a5c54bafe15a4291bed5bf4261afb5da
msgid "**Check for a new version of Ren'Py.**"
msgstr ""

#: ../../source/quickstart.rst:523
# 92316e67e447473bac5c698e37ede4f2
msgid "New versions of Ren'Py are released on a regular basis, to fix bugs and add new features. You should check the `download page <http://www.renpy.org/wiki/renpy/Download_Ren'Py>`_ to see if a new version has come out. You may also want to see if any bug-fixes are available on that page."
msgstr ""

#: ../../source/quickstart.rst:535
# bee79b86c523469f8248eeef500472c9
msgid "**Check the Script.**"
msgstr ""

#: ../../source/quickstart.rst:531
# 9a0224bbbc44424d89d1b9d281a5aa05
msgid "In the Launcher, you should go to the Tools page, and pick \"Check Script (Lint)\". This will check your games for errors that may affect some users. These errors can affect users on the Mac and Linux platforms, so it's important to fix them all, even if you don't see them on your computer."
msgstr ""

#: ../../source/quickstart.rst:540
# ae4fabd82c1d402abf48f15fed728026
msgid "**Build Distributions.**"
msgstr ""

#: ../../source/quickstart.rst:538
# 034237b685e84a65817c9e3a89a72d1d
msgid "From the Tools page, click distribute. The launcher will check your script again, ask you a few questions, and then build the distribution of your game."
msgstr ""

#: ../../source/quickstart.rst:546
# b01adbe627ee4c4386a5c1fee58cd86f
msgid "**Test.**"
msgstr ""

#: ../../source/quickstart.rst:543
# 4f3899ce40874d789ed3057ed5265b5b
msgid "Lint is not a substitute for thorough testing. It's your responsibility to check your game before it is released. Consider asking friends to help beta-test your game, as often a tester can find problems you can't."
msgstr ""

#: ../../source/quickstart.rst:554
# 064ee98175524ae886c85e81745c6f30
msgid "**Release.**"
msgstr ""

#: ../../source/quickstart.rst:549
# e874de7c8b364915b6bfb166a401cf7a
msgid "You should post the generated files (for Windows, Mac, and Linux) up on the web somewhere, and tell people where to download them from. Congratulations, you've released a game!"
msgstr ""

#: ../../source/quickstart.rst:553
# 47534976d7714e8a9cff4e675980c439
msgid "Please also add your released game to our `games database <http://games.renpy.org>`_, so we can keep track of the Ren'Py games being made."
msgstr ""

#: ../../source/quickstart.rst:557
# be3a8a46c8ca4e319e228643c5d33ac1
msgid "Script of The Question"
msgstr ""

#: ../../source/quickstart.rst:559
# df0952302bf6440cba13c35dbafb93ba
msgid "You can view the full script of ''The Question'' :ref:`here <thequestion>`."
msgstr ""

#: ../../source/quickstart.rst:562
# 66e7230847b5401bab6f1ea999bc5e8f
msgid "Where do we go from here?"
msgstr ""

#: ../../source/quickstart.rst:564
# f609c2c92f554443b905cb1040b289b8
msgid "This Quickstart has barely scratched the surface of what Ren'Py is capable of. For simplicity's sake, we've omitted many features Ren'Py supports. To get a feel for what Ren'Py is capable of, we suggest playing through the demo, and having Eileen demonstrate these features to you."
msgstr ""

#: ../../source/quickstart.rst:570
# 8a24eb26f7e64b48a0971629aba263b3
msgid "You may also want to read the rest of this (complex) manual, as it's the definitive guide to Ren'Py."
msgstr ""

#: ../../source/quickstart.rst:573
# 2869ae7421844949bba0bf06924175e8
msgid "On the Ren'Py website, there's the a `FAQ <http://www.renpy.org/wiki/renpy/doc/FAQ>`_ giving answers to common questions, and a `Cookbook <http://www.renpy.org/wiki/renpy/doc/cookbook/Cookbook>`_ giving useful code smippets. If you have questions, we suggest asking them at the `Lemma Soft Forums <http://lemmasoft.renai.us/forums/>`_, the official forum of Ren'Py. This is the central hub of the Ren'Py community, and we welcome new users, and the questions they bring."
msgstr ""

#: ../../source/quickstart.rst:580
# a64b509235124ed5b466d74ec39479f5
msgid "Thank you for choosing the Ren'Py visual novel engine. We look forward to seeing what you can create with it!"
msgstr ""

