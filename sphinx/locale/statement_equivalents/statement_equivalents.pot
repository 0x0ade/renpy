# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.15.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 22:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/statement_equivalents.rst:8
# 057eed6fd10049d88a2d4f704c8e4c69
msgid "Statement Equivalents"
msgstr ""

#: ../../source/statement_equivalents.rst:10
# 18086a81c6f34f0cb8781cb77b82bff1
msgid "To allow Ren'Py to be scripted in python, each Ren'Py statement has equivalent Python code. This usually consists of a Python function, but may also consist of a code pattern that performs an action equivalent to the statement."
msgstr ""

#: ../../source/statement_equivalents.rst:17
# 5f4e5e24ccf84ed2810ac24b9dd82bfd
msgid "Dialogue"
msgstr ""

#: ../../source/statement_equivalents.rst:19
# 94dfb4bfbcb244cca8981a1d36b27f4c
msgid "The Ren'Py say statement is equivalent to calling the character object as a function. The following code displays the same line twice::"
msgstr ""

#: ../../source/statement_equivalents.rst:26
# 54909114182a47d9be737b6e15cb7dea
msgid "Displaying narration can be done the same way, by using the ``narrator`` character. When calling a character, it's possible to supply the keyword argument `interact`. When interact is false, Ren'Py will display the character dialogue box, and will then return before performing an interaction."
msgstr ""

#: ../../source/statement_equivalents.rst:32
# cd2d17561293465896cb2983e85754ec
msgid "This equivalence of characters and function objects works in the other direction as well. It is possible to declare a python function, and then use that function in the place of a character object. For example, the following function uses a variable to choose between two characters. ::"
msgstr ""

#: ../../source/statement_equivalents.rst:59
# 24e2a06214b242ecbd28464875cedfd4
msgid "A function used in this way should either ignore unknown keyword arguments, or pass them to a character function. Doing this will allow the game to continue working if Ren'Py adds additional keyword arguments to character calls."
msgstr ""

#: ../../source/statement_equivalents.rst:66
# e1169544bbe74447ab8045746c546bd1
msgid "Displaying Images"
msgstr ""

#: ../../source/statement_equivalents.rst:68
# 58c6b91179544900a3baade96c650fae
msgid "The image, scene, show, and hide statements each have an equivalent python function."
msgstr ""

#: ../../source/inc/se_images:5
# 2466739be3604ba8bf2679b7c643f2dc
msgid "Hides an image from a layer. The python equivalent of the hide statement."
msgstr ""

#: ../../source/inc/se_images:9
#: ../../source/inc/se_images:20
#: ../../source/inc/se_images:49
# d61e73a11ec2410ab371ffbbf366a901
# 6b972a9dbf734fe598b6d5dada68a27b
# cb4f153f55a141d8bf8b7a129354320f
msgid "`name`"
msgstr ""

#: ../../source/inc/se_images:8
# e23d0952eb034c09a0bd4a6969181dc0
msgid "The name of the image to hide. Only the image tag is used, and any image with the tag is hidden (the precise name does not matter)."
msgstr ""

#: ../../source/inc/se_images:11
#: ../../source/inc/se_images:57
# bf1d8852b7db495b9097396d1760b505
# 50f1a347d87f4d17bc009f0b2cc30b78
msgid "`layer`"
msgstr ""

#: ../../source/inc/se_images:12
# 3d426e063bc4464fb66f8b3d7f97be89
msgid "The layer on which this function operates."
msgstr ""

#: ../../source/inc/se_images:16
# cce70a034d944d52aaaf472135e26cef
msgid "Defines an image. This function is the python equivalent of the image statement."
msgstr ""

#: ../../source/inc/se_images:20
# 9222706863fb47e6831f987eff22b621
msgid "The name of the image to display, a string."
msgstr ""

#: ../../source/inc/se_images:23
# 317f4bc383664fd99828b3cce04374af
msgid "`d`"
msgstr ""

#: ../../source/inc/se_images:23
# 8d113d6174964bacac4e04e9f8e7c64f
msgid "The displayable to associate with that image name."
msgstr ""

#: ../../source/inc/se_images:25
# cbb709b9dea7452bb6f3e0f3fdfa570e
msgid "This function may only be run from inside an init block. It is an error to run this function once the game has started."
msgstr ""

#: ../../source/inc/se_images:30
# ef53050955b44166acd94bc24a74bc81
msgid "Removes all displayables from `layer`. This is equivalent to the scene statement, when the scene statement is not given an image to show."
msgstr ""

#: ../../source/inc/se_images:33
# 567151a3157d47bd8f1df2d4839501d5
msgid "A full scene statement is equivalent to a call to renpy.scene followed by a call to :func:`renpy.show`. For example::"
msgstr ""

#: ../../source/inc/se_images:38
# 097056a010a14fa086e392b64e335359
msgid "is equivalent to::"
msgstr ""

#: ../../source/inc/se_images:45
# e9c459cdbead46a0a1452b383eb8eab9
msgid "Shows an image on a layer. This is the programmatic equivalent of the show statement."
msgstr ""

#: ../../source/inc/se_images:49
# d25d5b46363e4ecc8a37a78c61d72494
msgid "The name of the image to show, a string."
msgstr ""

#: ../../source/inc/se_images:53
# 42880af969e248928002cc3c89ccf3e8
msgid "`at_list`"
msgstr ""

#: ../../source/inc/se_images:52
# 12c7d317f30b44bba22f106c1cd2d432
msgid "A list of transforms that are applied to the image. The equivalent of the ``at`` property."
msgstr ""

#: ../../source/inc/se_images:56
# f3c28c6e2dca4d9db3df436cc74585fb
msgid "A string, giving the name of the layer on which the image will be shown. The equivalent of the ``onlayer`` property."
msgstr ""

#: ../../source/inc/se_images:63
# fc03c76feba746ff9e422ff88aee5846
msgid "`what`"
msgstr ""

#: ../../source/inc/se_images:60
# 6f2bc399f7754fc3ae8fa53f41681318
msgid "If not None, this is a displayable that will be shown in lieu of looking on the image. (This is the equivalent of the show expression statement.) When a `what` parameter is given, `name` can be used to associate a tag with the image."
msgstr ""

#: ../../source/inc/se_images:66
# a66cf64a9fc84193ba5f4a9d3557f5d5
msgid "`zorder`"
msgstr ""

#: ../../source/inc/se_images:66
# 51bef2d3bf4a4548a3b8b346e51933eb
msgid "An integer, the equivalent of the ``zorder`` property."
msgstr ""

#: ../../source/inc/se_images:70
# 5bdc571edc4044ff9a1c60314c9d4fd7
msgid "`tag`"
msgstr ""

#: ../../source/inc/se_images:69
# 16a1fce1c76143f2afef24e52caa52c0
msgid "A string, used to specify the the image tag of the shown image. The equivalent of the ``as`` property."
msgstr ""

#: ../../source/inc/se_images:73
# 91906d07a5474a778e2c7fde9e976d9f
msgid "`behind`"
msgstr ""

#: ../../source/inc/se_images:73
# aacca96cb3334706a41b2aceb3711526
msgid "A list of strings, giving image tags that this image is shown behind. The equivalent of the ``behind`` property."
msgstr ""

#: ../../source/statement_equivalents.rst:74
# 585ae2c0df754f7b8b6e0fcb6bd786d2
msgid "Transitions"
msgstr ""

#: ../../source/statement_equivalents.rst:76
# 0ac67500485a448dad9f9b9812f1874d
msgid "The equivalent of the with statement is the renpy.with_statement function."
msgstr ""

#: ../../source/inc/se_with:5
# 364a1335abb641acad0c7508ae39305a
msgid "Causes a transition to occur. This is the python equivalent of the with statement."
msgstr ""

#: ../../source/inc/se_with:9
# 5f78cf9432f141aa876bfef0a105f0a2
msgid "`trans`"
msgstr ""

#: ../../source/inc/se_with:9
# d7f4e67287974537b9c9191dc9515e86
msgid "The transition."
msgstr ""

#: ../../source/inc/se_with:13
# 7a6912157ef04d288b837c712d58dde5
msgid "`always`"
msgstr ""

#: ../../source/inc/se_with:12
# 3b0aeae791b842779b66d56de3955afc
msgid "If True, the transition will always occur, even if the user has disabled transitions."
msgstr ""

#: ../../source/inc/se_with:15
# 7184d40b0a0f4778af40a4fefd87e766
msgid "This function returns true if the user chose to interrupt the transition, and false otherwise."
msgstr ""

